<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1045.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="8569"><g><title>`0x7FFC07F1CC70 (2 samples, 0.02%)</title><rect x="0.0000%" y="997" width="0.0233%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1007.50"></text></g><g><title>`0x7FFC07F026C6 (2 samples, 0.02%)</title><rect x="0.0233%" y="901" width="0.0233%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.2733%" y="911.50"></text></g><g><title>`0x7FFC07F027DA (1 samples, 0.01%)</title><rect x="0.0467%" y="901" width="0.0117%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.2967%" y="911.50"></text></g><g><title>`0x7FFC07F033D7 (1 samples, 0.01%)</title><rect x="0.0467%" y="885" width="0.0117%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="1"/><text x="0.2967%" y="895.50"></text></g><g><title>`0x7FFC07EE7EC7 (1 samples, 0.01%)</title><rect x="0.0467%" y="869" width="0.0117%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.2967%" y="879.50"></text></g><g><title>`0x7FFC07EEA7DD (1 samples, 0.01%)</title><rect x="0.0467%" y="853" width="0.0117%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="0.2967%" y="863.50"></text></g><g><title>`0x7FFC07EED71F (1 samples, 0.01%)</title><rect x="0.0467%" y="837" width="0.0117%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="0.2967%" y="847.50"></text></g><g><title>`0x7FFC07F30138 (4 samples, 0.05%)</title><rect x="0.0233%" y="917" width="0.0467%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="4"/><text x="0.2733%" y="927.50"></text></g><g><title>`0x7FFC07F0288A (1 samples, 0.01%)</title><rect x="0.0583%" y="901" width="0.0117%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="1"/><text x="0.3083%" y="911.50"></text></g><g><title>`0x7FFC07F24518 (1 samples, 0.01%)</title><rect x="0.0583%" y="885" width="0.0117%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="1"/><text x="0.3083%" y="895.50"></text></g><g><title>`0x7FFC07F6DF64 (1 samples, 0.01%)</title><rect x="0.0583%" y="869" width="0.0117%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="1"/><text x="0.3083%" y="879.50"></text></g><g><title>`0x7FFC07F30BE6 (3 samples, 0.04%)</title><rect x="0.0700%" y="901" width="0.0350%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="3"/><text x="0.3200%" y="911.50"></text></g><g><title>`0x7FFC07F30526 (3 samples, 0.04%)</title><rect x="0.0700%" y="885" width="0.0350%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="3"/><text x="0.3200%" y="895.50"></text></g><g><title>`0x7FFC07F30707 (3 samples, 0.04%)</title><rect x="0.0700%" y="869" width="0.0350%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="3"/><text x="0.3200%" y="879.50"></text></g><g><title>`0x7FFC07F3087B (3 samples, 0.04%)</title><rect x="0.0700%" y="853" width="0.0350%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="3"/><text x="0.3200%" y="863.50"></text></g><g><title>`0x7FFC07F6DD04 (3 samples, 0.04%)</title><rect x="0.0700%" y="837" width="0.0350%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="3"/><text x="0.3200%" y="847.50"></text></g><g><title>`0x7FFC07F3119C (1 samples, 0.01%)</title><rect x="0.1050%" y="885" width="0.0117%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="0.3550%" y="895.50"></text></g><g><title>`0x7FFC07F6DBC4 (1 samples, 0.01%)</title><rect x="0.1050%" y="869" width="0.0117%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="0.3550%" y="879.50"></text></g><g><title>`0x7FFC07EE4AAA (1 samples, 0.01%)</title><rect x="0.1167%" y="869" width="0.0117%" height="15" fill="rgb(221,200,47)" fg:x="10" fg:w="1"/><text x="0.3667%" y="879.50"></text></g><g><title>`0x7FFC07EE4D42 (1 samples, 0.01%)</title><rect x="0.1167%" y="853" width="0.0117%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="1"/><text x="0.3667%" y="863.50"></text></g><g><title>`0x7FFC07F6DA64 (1 samples, 0.01%)</title><rect x="0.1167%" y="837" width="0.0117%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="1"/><text x="0.3667%" y="847.50"></text></g><g><title>`0x7FFC07F31253 (2 samples, 0.02%)</title><rect x="0.1167%" y="885" width="0.0233%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="2"/><text x="0.3667%" y="895.50"></text></g><g><title>`0x7FFC07EE4BCF (1 samples, 0.01%)</title><rect x="0.1284%" y="869" width="0.0117%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="1"/><text x="0.3784%" y="879.50"></text></g><g><title>`0x7FFC07EDFB05 (1 samples, 0.01%)</title><rect x="0.1284%" y="853" width="0.0117%" height="15" fill="rgb(247,18,42)" fg:x="11" fg:w="1"/><text x="0.3784%" y="863.50"></text></g><g><title>`0x7FFC07EE0921 (1 samples, 0.01%)</title><rect x="0.1284%" y="837" width="0.0117%" height="15" fill="rgb(241,131,45)" fg:x="11" fg:w="1"/><text x="0.3784%" y="847.50"></text></g><g><title>`0x7FFC07EE2252 (1 samples, 0.01%)</title><rect x="0.1284%" y="821" width="0.0117%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="1"/><text x="0.3784%" y="831.50"></text></g><g><title>`0x7FFC07EE354A (1 samples, 0.01%)</title><rect x="0.1284%" y="805" width="0.0117%" height="15" fill="rgb(225,111,53)" fg:x="11" fg:w="1"/><text x="0.3784%" y="815.50"></text></g><g><title>`0x7FFC07F6DF64 (1 samples, 0.01%)</title><rect x="0.1284%" y="789" width="0.0117%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="1"/><text x="0.3784%" y="799.50"></text></g><g><title>`0x7FFC07F1D79A (11 samples, 0.13%)</title><rect x="0.0233%" y="965" width="0.1284%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="11"/><text x="0.2733%" y="975.50"></text></g><g><title>`0x7FFC07F33730 (11 samples, 0.13%)</title><rect x="0.0233%" y="949" width="0.1284%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="11"/><text x="0.2733%" y="959.50"></text></g><g><title>`0x7FFC07F300E3 (11 samples, 0.13%)</title><rect x="0.0233%" y="933" width="0.1284%" height="15" fill="rgb(209,103,24)" fg:x="2" fg:w="11"/><text x="0.2733%" y="943.50"></text></g><g><title>`0x7FFC07F30170 (7 samples, 0.08%)</title><rect x="0.0700%" y="917" width="0.0817%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="7"/><text x="0.3200%" y="927.50"></text></g><g><title>`0x7FFC07F30CB0 (4 samples, 0.05%)</title><rect x="0.1050%" y="901" width="0.0467%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="4"/><text x="0.3550%" y="911.50"></text></g><g><title>`0x7FFC07F31271 (1 samples, 0.01%)</title><rect x="0.1400%" y="885" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="12" fg:w="1"/><text x="0.3900%" y="895.50"></text></g><g><title>`0x7FFC07F6D744 (1 samples, 0.01%)</title><rect x="0.1400%" y="869" width="0.0117%" height="15" fill="rgb(241,83,37)" fg:x="12" fg:w="1"/><text x="0.3900%" y="879.50"></text></g><g><title>`0x7FFC07F30F12 (1 samples, 0.01%)</title><rect x="0.1517%" y="805" width="0.0117%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="1"/><text x="0.4017%" y="815.50"></text></g><g><title>`0x7FFC07F30707 (1 samples, 0.01%)</title><rect x="0.1517%" y="789" width="0.0117%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="1"/><text x="0.4017%" y="799.50"></text></g><g><title>`0x7FFC07F3087B (1 samples, 0.01%)</title><rect x="0.1517%" y="773" width="0.0117%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="1"/><text x="0.4017%" y="783.50"></text></g><g><title>`0x7FFC07F6DD04 (1 samples, 0.01%)</title><rect x="0.1517%" y="757" width="0.0117%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="1"/><text x="0.4017%" y="767.50"></text></g><g><title>`0x7FFC07F3119C (1 samples, 0.01%)</title><rect x="0.1634%" y="789" width="0.0117%" height="15" fill="rgb(232,182,51)" fg:x="14" fg:w="1"/><text x="0.4134%" y="799.50"></text></g><g><title>`0x7FFC07F6DBC4 (1 samples, 0.01%)</title><rect x="0.1634%" y="773" width="0.0117%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="0.4134%" y="783.50"></text></g><g><title>`0x7FFC07EE4AAA (1 samples, 0.01%)</title><rect x="0.1750%" y="773" width="0.0117%" height="15" fill="rgb(208,69,12)" fg:x="15" fg:w="1"/><text x="0.4250%" y="783.50"></text></g><g><title>`0x7FFC07EE4D42 (1 samples, 0.01%)</title><rect x="0.1750%" y="757" width="0.0117%" height="15" fill="rgb(235,93,37)" fg:x="15" fg:w="1"/><text x="0.4250%" y="767.50"></text></g><g><title>`0x7FFC07F6DA64 (1 samples, 0.01%)</title><rect x="0.1750%" y="741" width="0.0117%" height="15" fill="rgb(213,116,39)" fg:x="15" fg:w="1"/><text x="0.4250%" y="751.50"></text></g><g><title>`0x7FFC07EE4BCF (1 samples, 0.01%)</title><rect x="0.1867%" y="773" width="0.0117%" height="15" fill="rgb(222,207,29)" fg:x="16" fg:w="1"/><text x="0.4367%" y="783.50"></text></g><g><title>`0x7FFC07EDFB05 (1 samples, 0.01%)</title><rect x="0.1867%" y="757" width="0.0117%" height="15" fill="rgb(206,96,30)" fg:x="16" fg:w="1"/><text x="0.4367%" y="767.50"></text></g><g><title>`0x7FFC07EE091A (1 samples, 0.01%)</title><rect x="0.1867%" y="741" width="0.0117%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="1"/><text x="0.4367%" y="751.50"></text></g><g><title>`0x7FFC07EF90B6 (1 samples, 0.01%)</title><rect x="0.1867%" y="725" width="0.0117%" height="15" fill="rgb(250,191,14)" fg:x="16" fg:w="1"/><text x="0.4367%" y="735.50"></text></g><g><title>`0x7FFC07EE4AAA (1 samples, 0.01%)</title><rect x="0.1984%" y="709" width="0.0117%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="1"/><text x="0.4484%" y="719.50"></text></g><g><title>`0x7FFC07EE4D42 (1 samples, 0.01%)</title><rect x="0.1984%" y="693" width="0.0117%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="1"/><text x="0.4484%" y="703.50"></text></g><g><title>`0x7FFC07F6DA64 (1 samples, 0.01%)</title><rect x="0.1984%" y="677" width="0.0117%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="1"/><text x="0.4484%" y="687.50"></text></g><g><title>`0x7FFC07EE4BCF (1 samples, 0.01%)</title><rect x="0.2101%" y="709" width="0.0117%" height="15" fill="rgb(250,213,24)" fg:x="18" fg:w="1"/><text x="0.4601%" y="719.50"></text></g><g><title>`0x7FFC07EDFAD8 (1 samples, 0.01%)</title><rect x="0.2101%" y="693" width="0.0117%" height="15" fill="rgb(247,123,22)" fg:x="18" fg:w="1"/><text x="0.4601%" y="703.50"></text></g><g><title>`0x7FFC07EDFEC4 (1 samples, 0.01%)</title><rect x="0.2101%" y="677" width="0.0117%" height="15" fill="rgb(231,138,38)" fg:x="18" fg:w="1"/><text x="0.4601%" y="687.50"></text></g><g><title>`0x7FFC07EDF2C4 (1 samples, 0.01%)</title><rect x="0.2101%" y="661" width="0.0117%" height="15" fill="rgb(231,145,46)" fg:x="18" fg:w="1"/><text x="0.4601%" y="671.50"></text></g><g><title>`0x7FFC07EE7B29 (3 samples, 0.04%)</title><rect x="0.1984%" y="757" width="0.0350%" height="15" fill="rgb(251,118,11)" fg:x="17" fg:w="3"/><text x="0.4484%" y="767.50"></text></g><g><title>`0x7FFC07EE88A8 (3 samples, 0.04%)</title><rect x="0.1984%" y="741" width="0.0350%" height="15" fill="rgb(217,147,25)" fg:x="17" fg:w="3"/><text x="0.4484%" y="751.50"></text></g><g><title>`0x7FFC07EE4479 (3 samples, 0.04%)</title><rect x="0.1984%" y="725" width="0.0350%" height="15" fill="rgb(247,81,37)" fg:x="17" fg:w="3"/><text x="0.4484%" y="735.50"></text></g><g><title>`0x7FFC07EE4C14 (1 samples, 0.01%)</title><rect x="0.2217%" y="709" width="0.0117%" height="15" fill="rgb(209,12,38)" fg:x="19" fg:w="1"/><text x="0.4717%" y="719.50"></text></g><g><title>`0x7FFC07EE79D2 (1 samples, 0.01%)</title><rect x="0.2217%" y="693" width="0.0117%" height="15" fill="rgb(227,1,9)" fg:x="19" fg:w="1"/><text x="0.4717%" y="703.50"></text></g><g><title>`0x7FFC07EE5082 (1 samples, 0.01%)</title><rect x="0.2217%" y="677" width="0.0117%" height="15" fill="rgb(248,47,43)" fg:x="19" fg:w="1"/><text x="0.4717%" y="687.50"></text></g><g><title>`0x7FFC07F6DF64 (1 samples, 0.01%)</title><rect x="0.2217%" y="661" width="0.0117%" height="15" fill="rgb(221,10,30)" fg:x="19" fg:w="1"/><text x="0.4717%" y="671.50"></text></g><g><title>`0x7FFC07F31253 (6 samples, 0.07%)</title><rect x="0.1750%" y="789" width="0.0700%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="6"/><text x="0.4250%" y="799.50"></text></g><g><title>`0x7FFC07EE4C14 (4 samples, 0.05%)</title><rect x="0.1984%" y="773" width="0.0467%" height="15" fill="rgb(222,148,37)" fg:x="17" fg:w="4"/><text x="0.4484%" y="783.50"></text></g><g><title>`0x7FFC07EE7BC4 (1 samples, 0.01%)</title><rect x="0.2334%" y="757" width="0.0117%" height="15" fill="rgb(234,67,33)" fg:x="20" fg:w="1"/><text x="0.4834%" y="767.50"></text></g><g><title>`0x7FFC07F026C6 (1 samples, 0.01%)</title><rect x="0.2334%" y="741" width="0.0117%" height="15" fill="rgb(247,98,35)" fg:x="20" fg:w="1"/><text x="0.4834%" y="751.50"></text></g><g><title>`0x7FFC07EEFB53 (9 samples, 0.11%)</title><rect x="0.1517%" y="837" width="0.1050%" height="15" fill="rgb(247,138,52)" fg:x="13" fg:w="9"/><text x="0.4017%" y="847.50"></text></g><g><title>`0x7FFC07F3021F (9 samples, 0.11%)</title><rect x="0.1517%" y="821" width="0.1050%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="9"/><text x="0.4017%" y="831.50"></text></g><g><title>`0x7FFC07F30F80 (8 samples, 0.09%)</title><rect x="0.1634%" y="805" width="0.0934%" height="15" fill="rgb(246,177,23)" fg:x="14" fg:w="8"/><text x="0.4134%" y="815.50"></text></g><g><title>`0x7FFC07F31271 (1 samples, 0.01%)</title><rect x="0.2451%" y="789" width="0.0117%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="1"/><text x="0.4951%" y="799.50"></text></g><g><title>`0x7FFC07F6D744 (1 samples, 0.01%)</title><rect x="0.2451%" y="773" width="0.0117%" height="15" fill="rgb(216,154,8)" fg:x="21" fg:w="1"/><text x="0.4951%" y="783.50"></text></g><g><title>`0x7FFC07DC78CA (1 samples, 0.01%)</title><rect x="0.2567%" y="741" width="0.0117%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="0.5067%" y="751.50"></text></g><g><title>`0x7FFC07DF0903 (1 samples, 0.01%)</title><rect x="0.2567%" y="725" width="0.0117%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="0.5067%" y="735.50"></text></g><g><title>`0x7FFC058DD2F1 (1 samples, 0.01%)</title><rect x="0.2567%" y="709" width="0.0117%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="0.5067%" y="719.50"></text></g><g><title>`0x7FFC07EFB44D (1 samples, 0.01%)</title><rect x="0.2567%" y="693" width="0.0117%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="0.5067%" y="703.50"></text></g><g><title>`0x7FFC07EFDBFA (1 samples, 0.01%)</title><rect x="0.2567%" y="677" width="0.0117%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="0.5067%" y="687.50"></text></g><g><title>`0x7FFC07EDE37B (1 samples, 0.01%)</title><rect x="0.2567%" y="661" width="0.0117%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="0.5067%" y="671.50"></text></g><g><title>`0x7FFC07EDE715 (1 samples, 0.01%)</title><rect x="0.2567%" y="645" width="0.0117%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="1"/><text x="0.5067%" y="655.50"></text></g><g><title>`0x7FFC07F6D864 (1 samples, 0.01%)</title><rect x="0.2567%" y="629" width="0.0117%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="0.5067%" y="639.50"></text></g><g><title>`0x7FFC05CB05A2 (11 samples, 0.13%)</title><rect x="0.1517%" y="933" width="0.1284%" height="15" fill="rgb(242,79,21)" fg:x="13" fg:w="11"/><text x="0.4017%" y="943.50"></text></g><g><title>`0x7FFC05CB19C7 (11 samples, 0.13%)</title><rect x="0.1517%" y="917" width="0.1284%" height="15" fill="rgb(211,96,35)" fg:x="13" fg:w="11"/><text x="0.4017%" y="927.50"></text></g><g><title>`0x7FFC05CAC050 (11 samples, 0.13%)</title><rect x="0.1517%" y="901" width="0.1284%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="11"/><text x="0.4017%" y="911.50"></text></g><g><title>`0x7FFC058B4232 (11 samples, 0.13%)</title><rect x="0.1517%" y="885" width="0.1284%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="11"/><text x="0.4017%" y="895.50"></text></g><g><title>`0x7FFC07EE6AF4 (11 samples, 0.13%)</title><rect x="0.1517%" y="869" width="0.1284%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="11"/><text x="0.4017%" y="879.50"></text></g><g><title>`0x7FFC07EE73E4 (11 samples, 0.13%)</title><rect x="0.1517%" y="853" width="0.1284%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="11"/><text x="0.4017%" y="863.50"></text></g><g><title>`0x7FFC07EEFBAE (2 samples, 0.02%)</title><rect x="0.2567%" y="837" width="0.0233%" height="15" fill="rgb(237,122,38)" fg:x="22" fg:w="2"/><text x="0.5067%" y="847.50"></text></g><g><title>`0x7FFC07F0D947 (2 samples, 0.02%)</title><rect x="0.2567%" y="821" width="0.0233%" height="15" fill="rgb(244,218,35)" fg:x="22" fg:w="2"/><text x="0.5067%" y="831.50"></text></g><g><title>`0x7FFC07F3D120 (2 samples, 0.02%)</title><rect x="0.2567%" y="805" width="0.0233%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="2"/><text x="0.5067%" y="815.50"></text></g><g><title>`0x7FFC07F3D09A (2 samples, 0.02%)</title><rect x="0.2567%" y="789" width="0.0233%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="2"/><text x="0.5067%" y="799.50"></text></g><g><title>`0x7FFC07F3D307 (2 samples, 0.02%)</title><rect x="0.2567%" y="773" width="0.0233%" height="15" fill="rgb(235,124,12)" fg:x="22" fg:w="2"/><text x="0.5067%" y="783.50"></text></g><g><title>`0x7FFC07EE9A1D (2 samples, 0.02%)</title><rect x="0.2567%" y="757" width="0.0233%" height="15" fill="rgb(224,169,11)" fg:x="22" fg:w="2"/><text x="0.5067%" y="767.50"></text></g><g><title>`0x7FFC07DC78EF (1 samples, 0.01%)</title><rect x="0.2684%" y="741" width="0.0117%" height="15" fill="rgb(250,166,2)" fg:x="23" fg:w="1"/><text x="0.5184%" y="751.50"></text></g><g><title>`0x7FFC07DE0AAE (1 samples, 0.01%)</title><rect x="0.2684%" y="725" width="0.0117%" height="15" fill="rgb(242,216,29)" fg:x="23" fg:w="1"/><text x="0.5184%" y="735.50"></text></g><g><title>`0x7FFC07DE0CA4 (1 samples, 0.01%)</title><rect x="0.2684%" y="709" width="0.0117%" height="15" fill="rgb(230,116,27)" fg:x="23" fg:w="1"/><text x="0.5184%" y="719.50"></text></g><g><title>`0x7FFC07DE0F85 (1 samples, 0.01%)</title><rect x="0.2684%" y="693" width="0.0117%" height="15" fill="rgb(228,99,48)" fg:x="23" fg:w="1"/><text x="0.5184%" y="703.50"></text></g><g><title>`0x7FFC07DE09B9 (1 samples, 0.01%)</title><rect x="0.2684%" y="677" width="0.0117%" height="15" fill="rgb(253,11,6)" fg:x="23" fg:w="1"/><text x="0.5184%" y="687.50"></text></g><g><title>`0x7FFC07DEA79F (1 samples, 0.01%)</title><rect x="0.2684%" y="661" width="0.0117%" height="15" fill="rgb(247,143,39)" fg:x="23" fg:w="1"/><text x="0.5184%" y="671.50"></text></g><g><title>`0x7FFC07DEA525 (1 samples, 0.01%)</title><rect x="0.2684%" y="645" width="0.0117%" height="15" fill="rgb(236,97,10)" fg:x="23" fg:w="1"/><text x="0.5184%" y="655.50"></text></g><g><title>`0x7FFC0589AF17 (1 samples, 0.01%)</title><rect x="0.2684%" y="629" width="0.0117%" height="15" fill="rgb(233,208,19)" fg:x="23" fg:w="1"/><text x="0.5184%" y="639.50"></text></g><g><title>`0x7FFC0589B769 (1 samples, 0.01%)</title><rect x="0.2684%" y="613" width="0.0117%" height="15" fill="rgb(216,164,2)" fg:x="23" fg:w="1"/><text x="0.5184%" y="623.50"></text></g><g><title>`0x7FFC05CB045F (12 samples, 0.14%)</title><rect x="0.1517%" y="949" width="0.1400%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="12"/><text x="0.4017%" y="959.50"></text></g><g><title>`0x7FFC05CB05BC (1 samples, 0.01%)</title><rect x="0.2801%" y="933" width="0.0117%" height="15" fill="rgb(242,17,10)" fg:x="24" fg:w="1"/><text x="0.5301%" y="943.50"></text></g><g><title>`0x7FFC0729E3BB (1 samples, 0.01%)</title><rect x="0.2801%" y="917" width="0.0117%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="1"/><text x="0.5301%" y="927.50"></text></g><g><title>`0x7FFC07F2EF34 (1 samples, 0.01%)</title><rect x="0.2801%" y="901" width="0.0117%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="1"/><text x="0.5301%" y="911.50"></text></g><g><title>`0x7FFC07F6DAE4 (1 samples, 0.01%)</title><rect x="0.2801%" y="885" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="24" fg:w="1"/><text x="0.5301%" y="895.50"></text></g><g><title>calcGame.exe`std::rt::lang_start_internal::closure$1 (1 samples, 0.01%)</title><rect x="0.2917%" y="853" width="0.0117%" height="15" fill="rgb(215,21,27)" fg:x="25" fg:w="1"/><text x="0.5417%" y="863.50"></text></g><g><title>calcGame.exe`std::rt::init (1 samples, 0.01%)</title><rect x="0.2917%" y="837" width="0.0117%" height="15" fill="rgb(232,23,21)" fg:x="25" fg:w="1"/><text x="0.5417%" y="847.50"></text></g><g><title>calcGame.exe`std::sys::pal::windows::init (1 samples, 0.01%)</title><rect x="0.2917%" y="821" width="0.0117%" height="15" fill="rgb(244,5,23)" fg:x="25" fg:w="1"/><text x="0.5417%" y="831.50"></text></g><g><title>calcGame.exe`std::sys::pal::windows::stack_overflow::init (1 samples, 0.01%)</title><rect x="0.2917%" y="805" width="0.0117%" height="15" fill="rgb(226,81,46)" fg:x="25" fg:w="1"/><text x="0.5417%" y="815.50"></text></g><g><title>calcGame.exe`std::sys::pal::windows::stack_overflow::reserve_stack (1 samples, 0.01%)</title><rect x="0.2917%" y="789" width="0.0117%" height="15" fill="rgb(247,70,30)" fg:x="25" fg:w="1"/><text x="0.5417%" y="799.50"></text></g><g><title>`0x7FFC07F521C3 (1 samples, 0.01%)</title><rect x="0.2917%" y="773" width="0.0117%" height="15" fill="rgb(212,68,19)" fg:x="25" fg:w="1"/><text x="0.5417%" y="783.50"></text></g><g><title>`0x7FFC07EE2252 (1 samples, 0.01%)</title><rect x="0.2917%" y="757" width="0.0117%" height="15" fill="rgb(240,187,13)" fg:x="25" fg:w="1"/><text x="0.5417%" y="767.50"></text></g><g><title>`0x7FFC07EE354A (1 samples, 0.01%)</title><rect x="0.2917%" y="741" width="0.0117%" height="15" fill="rgb(223,113,26)" fg:x="25" fg:w="1"/><text x="0.5417%" y="751.50"></text></g><g><title>`0x7FFC07F6DF64 (1 samples, 0.01%)</title><rect x="0.2917%" y="725" width="0.0117%" height="15" fill="rgb(206,192,2)" fg:x="25" fg:w="1"/><text x="0.5417%" y="735.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.01%)</title><rect x="0.3034%" y="757" width="0.0117%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="1"/><text x="0.5534%" y="767.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.3034%" y="741" width="0.0117%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="1"/><text x="0.5534%" y="751.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="0.3034%" y="725" width="0.0117%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="1"/><text x="0.5534%" y="735.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.01%)</title><rect x="0.3034%" y="709" width="0.0117%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="1"/><text x="0.5534%" y="719.50"></text></g><g><title>`0x7FFC07EFB44D (1 samples, 0.01%)</title><rect x="0.3034%" y="693" width="0.0117%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="1"/><text x="0.5534%" y="703.50"></text></g><g><title>`0x7FFC07EFDE8B (1 samples, 0.01%)</title><rect x="0.3034%" y="677" width="0.0117%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="1"/><text x="0.5534%" y="687.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (315 samples, 3.68%)</title><rect x="43.4590%" y="85" width="3.6760%" height="15" fill="rgb(205,117,38)" fg:x="3724" fg:w="315"/><text x="43.7090%" y="95.50">calc..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (289 samples, 3.37%)</title><rect x="43.7624%" y="69" width="3.3726%" height="15" fill="rgb(237,72,25)" fg:x="3750" fg:w="289"/><text x="44.0124%" y="79.50">cal..</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="48.1386%" y="69" width="0.0233%" height="15" fill="rgb(244,70,9)" fg:x="4125" fg:w="2"/><text x="48.3886%" y="79.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (169 samples, 1.97%)</title><rect x="47.1350%" y="85" width="1.9722%" height="15" fill="rgb(217,125,39)" fg:x="4039" fg:w="169"/><text x="47.3850%" y="95.50">c..</text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (81 samples, 0.95%)</title><rect x="48.1620%" y="69" width="0.9453%" height="15" fill="rgb(235,36,10)" fg:x="4127" fg:w="81"/><text x="48.4120%" y="79.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (105 samples, 1.23%)</title><rect x="49.1889%" y="69" width="1.2253%" height="15" fill="rgb(251,123,47)" fg:x="4215" fg:w="105"/><text x="49.4389%" y="79.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (105 samples, 1.23%)</title><rect x="49.1889%" y="53" width="1.2253%" height="15" fill="rgb(221,13,13)" fg:x="4215" fg:w="105"/><text x="49.4389%" y="63.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (59 samples, 0.69%)</title><rect x="50.4143%" y="69" width="0.6885%" height="15" fill="rgb(238,131,9)" fg:x="4320" fg:w="59"/><text x="50.6643%" y="79.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (59 samples, 0.69%)</title><rect x="50.4143%" y="53" width="0.6885%" height="15" fill="rgb(211,50,8)" fg:x="4320" fg:w="59"/><text x="50.6643%" y="63.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (282 samples, 3.29%)</title><rect x="49.1072%" y="85" width="3.2909%" height="15" fill="rgb(245,182,24)" fg:x="4208" fg:w="282"/><text x="49.3572%" y="95.50">cal..</text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (111 samples, 1.30%)</title><rect x="51.1028%" y="69" width="1.2954%" height="15" fill="rgb(242,14,37)" fg:x="4379" fg:w="111"/><text x="51.3528%" y="79.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (111 samples, 1.30%)</title><rect x="51.1028%" y="53" width="1.2954%" height="15" fill="rgb(246,228,12)" fg:x="4379" fg:w="111"/><text x="51.3528%" y="63.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (53 samples, 0.62%)</title><rect x="52.3982%" y="85" width="0.6185%" height="15" fill="rgb(213,55,15)" fg:x="4490" fg:w="53"/><text x="52.6482%" y="95.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (53 samples, 0.62%)</title><rect x="52.3982%" y="69" width="0.6185%" height="15" fill="rgb(209,9,3)" fg:x="4490" fg:w="53"/><text x="52.6482%" y="79.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (53 samples, 0.62%)</title><rect x="52.3982%" y="53" width="0.6185%" height="15" fill="rgb(230,59,30)" fg:x="4490" fg:w="53"/><text x="52.6482%" y="63.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (53 samples, 0.62%)</title><rect x="52.3982%" y="37" width="0.6185%" height="15" fill="rgb(209,121,21)" fg:x="4490" fg:w="53"/><text x="52.6482%" y="47.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (1,171 samples, 13.67%)</title><rect x="40.4131%" y="117" width="13.6655%" height="15" fill="rgb(220,109,13)" fg:x="3463" fg:w="1171"/><text x="40.6631%" y="127.50">calcGame.exe`alloc::v..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (1,170 samples, 13.65%)</title><rect x="40.4248%" y="101" width="13.6539%" height="15" fill="rgb(232,18,1)" fg:x="3464" fg:w="1170"/><text x="40.6748%" y="111.50">calcGame.exe`calcGame..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (91 samples, 1.06%)</title><rect x="53.0167%" y="85" width="1.0620%" height="15" fill="rgb(215,41,42)" fg:x="4543" fg:w="91"/><text x="53.2667%" y="95.50"></text></g><g><title>calcGame.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;calcGame::Node&gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$ (3 samples, 0.04%)</title><rect x="54.0436%" y="69" width="0.0350%" height="15" fill="rgb(224,123,36)" fg:x="4631" fg:w="3"/><text x="54.2936%" y="79.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="54.2304%" y="101" width="0.0233%" height="15" fill="rgb(240,125,3)" fg:x="4647" fg:w="2"/><text x="54.4804%" y="111.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (38 samples, 0.44%)</title><rect x="54.0787%" y="117" width="0.4435%" height="15" fill="rgb(205,98,50)" fg:x="4634" fg:w="38"/><text x="54.3287%" y="127.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (23 samples, 0.27%)</title><rect x="54.2537%" y="101" width="0.2684%" height="15" fill="rgb(205,185,37)" fg:x="4649" fg:w="23"/><text x="54.5037%" y="111.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (40 samples, 0.47%)</title><rect x="54.6038%" y="101" width="0.4668%" height="15" fill="rgb(238,207,15)" fg:x="4679" fg:w="40"/><text x="54.8538%" y="111.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (40 samples, 0.47%)</title><rect x="54.6038%" y="85" width="0.4668%" height="15" fill="rgb(213,199,42)" fg:x="4679" fg:w="40"/><text x="54.8538%" y="95.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (43 samples, 0.50%)</title><rect x="55.0706%" y="101" width="0.5018%" height="15" fill="rgb(235,201,11)" fg:x="4719" fg:w="43"/><text x="55.3206%" y="111.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (43 samples, 0.50%)</title><rect x="55.0706%" y="85" width="0.5018%" height="15" fill="rgb(207,46,11)" fg:x="4719" fg:w="43"/><text x="55.3206%" y="95.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (127 samples, 1.48%)</title><rect x="54.5221%" y="117" width="1.4821%" height="15" fill="rgb(241,35,35)" fg:x="4672" fg:w="127"/><text x="54.7721%" y="127.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (37 samples, 0.43%)</title><rect x="55.5724%" y="101" width="0.4318%" height="15" fill="rgb(243,32,47)" fg:x="4762" fg:w="37"/><text x="55.8224%" y="111.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (37 samples, 0.43%)</title><rect x="55.5724%" y="85" width="0.4318%" height="15" fill="rgb(247,202,23)" fg:x="4762" fg:w="37"/><text x="55.8224%" y="95.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="56.0042%" y="117" width="0.0934%" height="15" fill="rgb(219,102,11)" fg:x="4799" fg:w="8"/><text x="56.2542%" y="127.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="56.0042%" y="101" width="0.0934%" height="15" fill="rgb(243,110,44)" fg:x="4799" fg:w="8"/><text x="56.2542%" y="111.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="56.0042%" y="85" width="0.0934%" height="15" fill="rgb(222,74,54)" fg:x="4799" fg:w="8"/><text x="56.2542%" y="95.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (8 samples, 0.09%)</title><rect x="56.0042%" y="69" width="0.0934%" height="15" fill="rgb(216,99,12)" fg:x="4799" fg:w="8"/><text x="56.2542%" y="79.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (1,470 samples, 17.15%)</title><rect x="39.1644%" y="149" width="17.1549%" height="15" fill="rgb(226,22,26)" fg:x="3356" fg:w="1470"/><text x="39.4144%" y="159.50">calcGame.exe`alloc::vec::Ve..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (1,465 samples, 17.10%)</title><rect x="39.2228%" y="133" width="17.0965%" height="15" fill="rgb(217,163,10)" fg:x="3361" fg:w="1465"/><text x="39.4728%" y="143.50">calcGame.exe`calcGame::cal..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (19 samples, 0.22%)</title><rect x="56.0976%" y="117" width="0.2217%" height="15" fill="rgb(213,25,53)" fg:x="4807" fg:w="19"/><text x="56.3476%" y="127.50"></text></g><g><title>calcGame.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;calcGame::Node&gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$ (2 samples, 0.02%)</title><rect x="56.2960%" y="101" width="0.0233%" height="15" fill="rgb(252,105,26)" fg:x="4824" fg:w="2"/><text x="56.5460%" y="111.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (12 samples, 0.14%)</title><rect x="56.3193%" y="149" width="0.1400%" height="15" fill="rgb(220,39,43)" fg:x="4826" fg:w="12"/><text x="56.5693%" y="159.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (9 samples, 0.11%)</title><rect x="56.3543%" y="133" width="0.1050%" height="15" fill="rgb(229,68,48)" fg:x="4829" fg:w="9"/><text x="56.6043%" y="143.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (5 samples, 0.06%)</title><rect x="56.4827%" y="133" width="0.0583%" height="15" fill="rgb(252,8,32)" fg:x="4840" fg:w="5"/><text x="56.7327%" y="143.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (5 samples, 0.06%)</title><rect x="56.4827%" y="117" width="0.0583%" height="15" fill="rgb(223,20,43)" fg:x="4840" fg:w="5"/><text x="56.7327%" y="127.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (18 samples, 0.21%)</title><rect x="56.5410%" y="133" width="0.2101%" height="15" fill="rgb(229,81,49)" fg:x="4845" fg:w="18"/><text x="56.7910%" y="143.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (18 samples, 0.21%)</title><rect x="56.5410%" y="117" width="0.2101%" height="15" fill="rgb(236,28,36)" fg:x="4845" fg:w="18"/><text x="56.7910%" y="127.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (30 samples, 0.35%)</title><rect x="56.4593%" y="149" width="0.3501%" height="15" fill="rgb(249,185,26)" fg:x="4838" fg:w="30"/><text x="56.7093%" y="159.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (5 samples, 0.06%)</title><rect x="56.7511%" y="133" width="0.0583%" height="15" fill="rgb(249,174,33)" fg:x="4863" fg:w="5"/><text x="57.0011%" y="143.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (5 samples, 0.06%)</title><rect x="56.7511%" y="117" width="0.0583%" height="15" fill="rgb(233,201,37)" fg:x="4863" fg:w="5"/><text x="57.0011%" y="127.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (2 samples, 0.02%)</title><rect x="56.8094%" y="149" width="0.0233%" height="15" fill="rgb(221,78,26)" fg:x="4868" fg:w="2"/><text x="57.0594%" y="159.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (2 samples, 0.02%)</title><rect x="56.8094%" y="133" width="0.0233%" height="15" fill="rgb(250,127,30)" fg:x="4868" fg:w="2"/><text x="57.0594%" y="143.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (2 samples, 0.02%)</title><rect x="56.8094%" y="117" width="0.0233%" height="15" fill="rgb(230,49,44)" fg:x="4868" fg:w="2"/><text x="57.0594%" y="127.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (2 samples, 0.02%)</title><rect x="56.8094%" y="101" width="0.0233%" height="15" fill="rgb(229,67,23)" fg:x="4868" fg:w="2"/><text x="57.0594%" y="111.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (1,545 samples, 18.03%)</title><rect x="38.8493%" y="181" width="18.0301%" height="15" fill="rgb(249,83,47)" fg:x="3329" fg:w="1545"/><text x="39.0993%" y="191.50">calcGame.exe`alloc::vec::Vec..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (1,544 samples, 18.02%)</title><rect x="38.8610%" y="165" width="18.0184%" height="15" fill="rgb(215,43,3)" fg:x="3330" fg:w="1544"/><text x="39.1110%" y="175.50">calcGame.exe`calcGame::calcu..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (4 samples, 0.05%)</title><rect x="56.8328%" y="149" width="0.0467%" height="15" fill="rgb(238,154,13)" fg:x="4870" fg:w="4"/><text x="57.0828%" y="159.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (4 samples, 0.05%)</title><rect x="56.8794%" y="181" width="0.0467%" height="15" fill="rgb(219,56,2)" fg:x="4874" fg:w="4"/><text x="57.1294%" y="191.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (2 samples, 0.02%)</title><rect x="56.9028%" y="165" width="0.0233%" height="15" fill="rgb(233,0,4)" fg:x="4876" fg:w="2"/><text x="57.1528%" y="175.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (1 samples, 0.01%)</title><rect x="56.9261%" y="165" width="0.0117%" height="15" fill="rgb(235,30,7)" fg:x="4878" fg:w="1"/><text x="57.1761%" y="175.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (1 samples, 0.01%)</title><rect x="56.9261%" y="149" width="0.0117%" height="15" fill="rgb(250,79,13)" fg:x="4878" fg:w="1"/><text x="57.1761%" y="159.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (5 samples, 0.06%)</title><rect x="56.9261%" y="181" width="0.0583%" height="15" fill="rgb(211,146,34)" fg:x="4878" fg:w="5"/><text x="57.1761%" y="191.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (4 samples, 0.05%)</title><rect x="56.9378%" y="165" width="0.0467%" height="15" fill="rgb(228,22,38)" fg:x="4879" fg:w="4"/><text x="57.1878%" y="175.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (4 samples, 0.05%)</title><rect x="56.9378%" y="149" width="0.0467%" height="15" fill="rgb(235,168,5)" fg:x="4879" fg:w="4"/><text x="57.1878%" y="159.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="56.9845%" y="181" width="0.0350%" height="15" fill="rgb(221,155,16)" fg:x="4883" fg:w="3"/><text x="57.2345%" y="191.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="56.9845%" y="165" width="0.0350%" height="15" fill="rgb(215,215,53)" fg:x="4883" fg:w="3"/><text x="57.2345%" y="175.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="56.9845%" y="149" width="0.0350%" height="15" fill="rgb(223,4,10)" fg:x="4883" fg:w="3"/><text x="57.2345%" y="159.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (3 samples, 0.04%)</title><rect x="56.9845%" y="133" width="0.0350%" height="15" fill="rgb(234,103,6)" fg:x="4883" fg:w="3"/><text x="57.2345%" y="143.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (1,624 samples, 18.95%)</title><rect x="38.0908%" y="213" width="18.9520%" height="15" fill="rgb(227,97,0)" fg:x="3264" fg:w="1624"/><text x="38.3408%" y="223.50">calcGame.exe`alloc::vec::Vec&lt;e..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (1,617 samples, 18.87%)</title><rect x="38.1725%" y="197" width="18.8703%" height="15" fill="rgb(234,150,53)" fg:x="3271" fg:w="1617"/><text x="38.4225%" y="207.50">calcGame.exe`calcGame::calcul..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (2 samples, 0.02%)</title><rect x="57.0195%" y="181" width="0.0233%" height="15" fill="rgb(228,201,54)" fg:x="4886" fg:w="2"/><text x="57.2695%" y="191.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (32 samples, 0.37%)</title><rect x="57.0428%" y="213" width="0.3734%" height="15" fill="rgb(222,22,37)" fg:x="4888" fg:w="32"/><text x="57.2928%" y="223.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (11 samples, 0.13%)</title><rect x="57.2879%" y="197" width="0.1284%" height="15" fill="rgb(237,53,32)" fg:x="4909" fg:w="11"/><text x="57.5379%" y="207.50"></text></g><g><title>calcGame.exe`alloc::vec::impl$11::clone(alloc::vec::Vec&lt;enum2$ (1 samples, 0.01%)</title><rect x="57.4163%" y="213" width="0.0117%" height="15" fill="rgb(233,25,53)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="223.50"></text></g><g><title>calcGame.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;enum2$ (1 samples, 0.01%)</title><rect x="57.4163%" y="197" width="0.0117%" height="15" fill="rgb(210,40,34)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="207.50"></text></g><g><title>calcGame.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="57.4163%" y="181" width="0.0117%" height="15" fill="rgb(241,220,44)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="191.50"></text></g><g><title>calcGame.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="57.4163%" y="165" width="0.0117%" height="15" fill="rgb(235,28,35)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="175.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="57.4163%" y="149" width="0.0117%" height="15" fill="rgb(210,56,17)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="159.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="57.4163%" y="133" width="0.0117%" height="15" fill="rgb(224,130,29)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="143.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.01%)</title><rect x="57.4163%" y="117" width="0.0117%" height="15" fill="rgb(235,212,8)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="127.50"></text></g><g><title>`0x7FFC07EFB44D (1 samples, 0.01%)</title><rect x="57.4163%" y="101" width="0.0117%" height="15" fill="rgb(223,33,50)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="111.50"></text></g><g><title>`0x7FFC07EFF1EE (1 samples, 0.01%)</title><rect x="57.4163%" y="85" width="0.0117%" height="15" fill="rgb(219,149,13)" fg:x="4920" fg:w="1"/><text x="57.6663%" y="95.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (17 samples, 0.20%)</title><rect x="57.4513%" y="197" width="0.1984%" height="15" fill="rgb(250,156,29)" fg:x="4923" fg:w="17"/><text x="57.7013%" y="207.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (17 samples, 0.20%)</title><rect x="57.4513%" y="181" width="0.1984%" height="15" fill="rgb(216,193,19)" fg:x="4923" fg:w="17"/><text x="57.7013%" y="191.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (13 samples, 0.15%)</title><rect x="57.6497%" y="197" width="0.1517%" height="15" fill="rgb(216,135,14)" fg:x="4940" fg:w="13"/><text x="57.8997%" y="207.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (13 samples, 0.15%)</title><rect x="57.6497%" y="181" width="0.1517%" height="15" fill="rgb(241,47,5)" fg:x="4940" fg:w="13"/><text x="57.8997%" y="191.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (52 samples, 0.61%)</title><rect x="57.4279%" y="213" width="0.6068%" height="15" fill="rgb(233,42,35)" fg:x="4921" fg:w="52"/><text x="57.6779%" y="223.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (20 samples, 0.23%)</title><rect x="57.8014%" y="197" width="0.2334%" height="15" fill="rgb(231,13,6)" fg:x="4953" fg:w="20"/><text x="58.0514%" y="207.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (20 samples, 0.23%)</title><rect x="57.8014%" y="181" width="0.2334%" height="15" fill="rgb(207,181,40)" fg:x="4953" fg:w="20"/><text x="58.0514%" y="191.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (5 samples, 0.06%)</title><rect x="58.0348%" y="213" width="0.0583%" height="15" fill="rgb(254,173,49)" fg:x="4973" fg:w="5"/><text x="58.2848%" y="223.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (5 samples, 0.06%)</title><rect x="58.0348%" y="197" width="0.0583%" height="15" fill="rgb(221,1,38)" fg:x="4973" fg:w="5"/><text x="58.2848%" y="207.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (5 samples, 0.06%)</title><rect x="58.0348%" y="181" width="0.0583%" height="15" fill="rgb(206,124,46)" fg:x="4973" fg:w="5"/><text x="58.2848%" y="191.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (5 samples, 0.06%)</title><rect x="58.0348%" y="165" width="0.0583%" height="15" fill="rgb(249,21,11)" fg:x="4973" fg:w="5"/><text x="58.2848%" y="175.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (2,045 samples, 23.87%)</title><rect x="34.3564%" y="245" width="23.8651%" height="15" fill="rgb(222,201,40)" fg:x="2944" fg:w="2045"/><text x="34.6064%" y="255.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;ca..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (2,015 samples, 23.51%)</title><rect x="34.7065%" y="229" width="23.5150%" height="15" fill="rgb(235,61,29)" fg:x="2974" fg:w="2015"/><text x="34.9565%" y="239.50">calcGame.exe`calcGame::calculate_recu..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (11 samples, 0.13%)</title><rect x="58.0931%" y="213" width="0.1284%" height="15" fill="rgb(219,207,3)" fg:x="4978" fg:w="11"/><text x="58.3431%" y="223.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (7 samples, 0.08%)</title><rect x="59.1318%" y="229" width="0.0817%" height="15" fill="rgb(222,56,46)" fg:x="5067" fg:w="7"/><text x="59.3818%" y="239.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::ptr (7 samples, 0.08%)</title><rect x="59.1318%" y="213" width="0.0817%" height="15" fill="rgb(239,76,54)" fg:x="5067" fg:w="7"/><text x="59.3818%" y="223.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (171 samples, 2.00%)</title><rect x="58.2215%" y="245" width="1.9956%" height="15" fill="rgb(231,124,27)" fg:x="4989" fg:w="171"/><text x="58.4715%" y="255.50">c..</text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (86 samples, 1.00%)</title><rect x="59.2134%" y="229" width="1.0036%" height="15" fill="rgb(249,195,6)" fg:x="5074" fg:w="86"/><text x="59.4634%" y="239.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (86 samples, 1.00%)</title><rect x="60.2871%" y="229" width="1.0036%" height="15" fill="rgb(237,174,47)" fg:x="5166" fg:w="86"/><text x="60.5371%" y="239.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (86 samples, 1.00%)</title><rect x="60.2871%" y="213" width="1.0036%" height="15" fill="rgb(206,201,31)" fg:x="5166" fg:w="86"/><text x="60.5371%" y="223.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (47 samples, 0.55%)</title><rect x="61.2907%" y="229" width="0.5485%" height="15" fill="rgb(231,57,52)" fg:x="5252" fg:w="47"/><text x="61.5407%" y="239.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (47 samples, 0.55%)</title><rect x="61.2907%" y="213" width="0.5485%" height="15" fill="rgb(248,177,22)" fg:x="5252" fg:w="47"/><text x="61.5407%" y="223.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (238 samples, 2.78%)</title><rect x="60.2171%" y="245" width="2.7775%" height="15" fill="rgb(215,211,37)" fg:x="5160" fg:w="238"/><text x="60.4671%" y="255.50">ca..</text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (99 samples, 1.16%)</title><rect x="61.8392%" y="229" width="1.1553%" height="15" fill="rgb(241,128,51)" fg:x="5299" fg:w="99"/><text x="62.0892%" y="239.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (99 samples, 1.16%)</title><rect x="61.8392%" y="213" width="1.1553%" height="15" fill="rgb(227,165,31)" fg:x="5299" fg:w="99"/><text x="62.0892%" y="223.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (32 samples, 0.37%)</title><rect x="62.9945%" y="245" width="0.3734%" height="15" fill="rgb(228,167,24)" fg:x="5398" fg:w="32"/><text x="63.2445%" y="255.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (32 samples, 0.37%)</title><rect x="62.9945%" y="229" width="0.3734%" height="15" fill="rgb(228,143,12)" fg:x="5398" fg:w="32"/><text x="63.2445%" y="239.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (32 samples, 0.37%)</title><rect x="62.9945%" y="213" width="0.3734%" height="15" fill="rgb(249,149,8)" fg:x="5398" fg:w="32"/><text x="63.2445%" y="223.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (32 samples, 0.37%)</title><rect x="62.9945%" y="197" width="0.3734%" height="15" fill="rgb(243,35,44)" fg:x="5398" fg:w="32"/><text x="63.2445%" y="207.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (2,769 samples, 32.31%)</title><rect x="31.6373%" y="277" width="32.3142%" height="15" fill="rgb(246,89,9)" fg:x="2711" fg:w="2769"/><text x="31.8873%" y="287.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (2,765 samples, 32.27%)</title><rect x="31.6840%" y="261" width="32.2675%" height="15" fill="rgb(233,213,13)" fg:x="2715" fg:w="2765"/><text x="31.9340%" y="271.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slic..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (50 samples, 0.58%)</title><rect x="63.3680%" y="245" width="0.5835%" height="15" fill="rgb(233,141,41)" fg:x="5430" fg:w="50"/><text x="63.6180%" y="255.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (6 samples, 0.07%)</title><rect x="64.0331%" y="261" width="0.0700%" height="15" fill="rgb(239,167,4)" fg:x="5487" fg:w="6"/><text x="64.2831%" y="271.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::ptr (6 samples, 0.07%)</title><rect x="64.0331%" y="245" width="0.0700%" height="15" fill="rgb(209,217,16)" fg:x="5487" fg:w="6"/><text x="64.2831%" y="255.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (30 samples, 0.35%)</title><rect x="63.9515%" y="277" width="0.3501%" height="15" fill="rgb(219,88,35)" fg:x="5480" fg:w="30"/><text x="64.2015%" y="287.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (17 samples, 0.20%)</title><rect x="64.1032%" y="261" width="0.1984%" height="15" fill="rgb(220,193,23)" fg:x="5493" fg:w="17"/><text x="64.3532%" y="271.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (21 samples, 0.25%)</title><rect x="64.3716%" y="261" width="0.2451%" height="15" fill="rgb(230,90,52)" fg:x="5516" fg:w="21"/><text x="64.6216%" y="271.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (21 samples, 0.25%)</title><rect x="64.3716%" y="245" width="0.2451%" height="15" fill="rgb(252,106,19)" fg:x="5516" fg:w="21"/><text x="64.6216%" y="255.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (41 samples, 0.48%)</title><rect x="64.6166%" y="261" width="0.4785%" height="15" fill="rgb(206,74,20)" fg:x="5537" fg:w="41"/><text x="64.8666%" y="271.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (41 samples, 0.48%)</title><rect x="64.6166%" y="245" width="0.4785%" height="15" fill="rgb(230,138,44)" fg:x="5537" fg:w="41"/><text x="64.8666%" y="255.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (88 samples, 1.03%)</title><rect x="64.3016%" y="277" width="1.0270%" height="15" fill="rgb(235,182,43)" fg:x="5510" fg:w="88"/><text x="64.5516%" y="287.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (20 samples, 0.23%)</title><rect x="65.0951%" y="261" width="0.2334%" height="15" fill="rgb(242,16,51)" fg:x="5578" fg:w="20"/><text x="65.3451%" y="271.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (20 samples, 0.23%)</title><rect x="65.0951%" y="245" width="0.2334%" height="15" fill="rgb(248,9,4)" fg:x="5578" fg:w="20"/><text x="65.3451%" y="255.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (9 samples, 0.11%)</title><rect x="65.3285%" y="277" width="0.1050%" height="15" fill="rgb(210,31,22)" fg:x="5598" fg:w="9"/><text x="65.5785%" y="287.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (9 samples, 0.11%)</title><rect x="65.3285%" y="261" width="0.1050%" height="15" fill="rgb(239,54,39)" fg:x="5598" fg:w="9"/><text x="65.5785%" y="271.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (9 samples, 0.11%)</title><rect x="65.3285%" y="245" width="0.1050%" height="15" fill="rgb(230,99,41)" fg:x="5598" fg:w="9"/><text x="65.5785%" y="255.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (9 samples, 0.11%)</title><rect x="65.3285%" y="229" width="0.1050%" height="15" fill="rgb(253,106,12)" fg:x="5598" fg:w="9"/><text x="65.5785%" y="239.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (3,770 samples, 44.00%)</title><rect x="21.5895%" y="309" width="43.9958%" height="15" fill="rgb(213,46,41)" fg:x="1850" fg:w="3770"/><text x="21.8395%" y="319.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global..</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (3,704 samples, 43.23%)</title><rect x="22.3597%" y="293" width="43.2256%" height="15" fill="rgb(215,133,35)" fg:x="1916" fg:w="3704"/><text x="22.6097%" y="303.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame..</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (13 samples, 0.15%)</title><rect x="65.4335%" y="277" width="0.1517%" height="15" fill="rgb(213,28,5)" fg:x="5607" fg:w="13"/><text x="65.6835%" y="287.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (17 samples, 0.20%)</title><rect x="68.4211%" y="293" width="0.1984%" height="15" fill="rgb(215,77,49)" fg:x="5863" fg:w="17"/><text x="68.6711%" y="303.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::ptr (3 samples, 0.04%)</title><rect x="68.5844%" y="277" width="0.0350%" height="15" fill="rgb(248,100,22)" fg:x="5877" fg:w="3"/><text x="68.8344%" y="287.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (459 samples, 5.36%)</title><rect x="65.5852%" y="309" width="5.3565%" height="15" fill="rgb(208,67,9)" fg:x="5620" fg:w="459"/><text x="65.8352%" y="319.50">calcGam..</text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (199 samples, 2.32%)</title><rect x="68.6194%" y="293" width="2.3223%" height="15" fill="rgb(219,133,21)" fg:x="5880" fg:w="199"/><text x="68.8694%" y="303.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (265 samples, 3.09%)</title><rect x="71.0701%" y="293" width="3.0925%" height="15" fill="rgb(246,46,29)" fg:x="6090" fg:w="265"/><text x="71.3201%" y="303.50">cal..</text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (265 samples, 3.09%)</title><rect x="71.0701%" y="277" width="3.0925%" height="15" fill="rgb(246,185,52)" fg:x="6090" fg:w="265"/><text x="71.3201%" y="287.50">cal..</text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (140 samples, 1.63%)</title><rect x="74.1627%" y="293" width="1.6338%" height="15" fill="rgb(252,136,11)" fg:x="6355" fg:w="140"/><text x="74.4127%" y="303.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (140 samples, 1.63%)</title><rect x="74.1627%" y="277" width="1.6338%" height="15" fill="rgb(219,138,53)" fg:x="6355" fg:w="140"/><text x="74.4127%" y="287.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (649 samples, 7.57%)</title><rect x="70.9418%" y="309" width="7.5738%" height="15" fill="rgb(211,51,23)" fg:x="6079" fg:w="649"/><text x="71.1918%" y="319.50">calcGame.e..</text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (233 samples, 2.72%)</title><rect x="75.7965%" y="293" width="2.7191%" height="15" fill="rgb(247,221,28)" fg:x="6495" fg:w="233"/><text x="76.0465%" y="303.50">ca..</text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (233 samples, 2.72%)</title><rect x="75.7965%" y="277" width="2.7191%" height="15" fill="rgb(251,222,45)" fg:x="6495" fg:w="233"/><text x="76.0465%" y="287.50">ca..</text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (137 samples, 1.60%)</title><rect x="78.5156%" y="309" width="1.5988%" height="15" fill="rgb(217,162,53)" fg:x="6728" fg:w="137"/><text x="78.7656%" y="319.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (137 samples, 1.60%)</title><rect x="78.5156%" y="293" width="1.5988%" height="15" fill="rgb(229,93,14)" fg:x="6728" fg:w="137"/><text x="78.7656%" y="303.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (137 samples, 1.60%)</title><rect x="78.5156%" y="277" width="1.5988%" height="15" fill="rgb(209,67,49)" fg:x="6728" fg:w="137"/><text x="78.7656%" y="287.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (137 samples, 1.60%)</title><rect x="78.5156%" y="261" width="1.5988%" height="15" fill="rgb(213,87,29)" fg:x="6728" fg:w="137"/><text x="78.7656%" y="271.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (6,201 samples, 72.37%)</title><rect x="9.5577%" y="341" width="72.3655%" height="15" fill="rgb(205,151,52)" fg:x="819" fg:w="6201"/><text x="9.8077%" y="351.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (6,160 samples, 71.89%)</title><rect x="10.0362%" y="325" width="71.8870%" height="15" fill="rgb(253,215,39)" fg:x="860" fg:w="6160"/><text x="10.2862%" y="335.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (155 samples, 1.81%)</title><rect x="80.1144%" y="309" width="1.8088%" height="15" fill="rgb(221,220,41)" fg:x="6865" fg:w="155"/><text x="80.3644%" y="319.50">c..</text></g><g><title>calcGame.exe`core::ptr::non_null::impl$12::eq(core::ptr::non_null::NonNull&lt;enum2$&lt;calcGame::Node&gt; &gt;*, core::ptr::non_null::NonNull&lt;enum2$ (4 samples, 0.05%)</title><rect x="81.8765%" y="293" width="0.0467%" height="15" fill="rgb(218,133,21)" fg:x="7016" fg:w="4"/><text x="82.1265%" y="303.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="83.9071%" y="325" width="0.0233%" height="15" fill="rgb(221,193,43)" fg:x="7190" fg:w="2"/><text x="84.1571%" y="335.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="83.9188%" y="309" width="0.0117%" height="15" fill="rgb(240,128,52)" fg:x="7191" fg:w="1"/><text x="84.1688%" y="319.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (305 samples, 3.56%)</title><rect x="81.9232%" y="341" width="3.5593%" height="15" fill="rgb(253,114,12)" fg:x="7020" fg:w="305"/><text x="82.1732%" y="351.50">calc..</text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (133 samples, 1.55%)</title><rect x="83.9304%" y="325" width="1.5521%" height="15" fill="rgb(215,223,47)" fg:x="7192" fg:w="133"/><text x="84.1804%" y="335.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (192 samples, 2.24%)</title><rect x="85.7393%" y="325" width="2.2406%" height="15" fill="rgb(248,225,23)" fg:x="7347" fg:w="192"/><text x="85.9893%" y="335.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (192 samples, 2.24%)</title><rect x="85.7393%" y="309" width="2.2406%" height="15" fill="rgb(250,108,0)" fg:x="7347" fg:w="192"/><text x="85.9893%" y="319.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (180 samples, 2.10%)</title><rect x="87.9799%" y="325" width="2.1006%" height="15" fill="rgb(228,208,7)" fg:x="7539" fg:w="180"/><text x="88.2299%" y="335.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (180 samples, 2.10%)</title><rect x="87.9799%" y="309" width="2.1006%" height="15" fill="rgb(244,45,10)" fg:x="7539" fg:w="180"/><text x="88.2299%" y="319.50">c..</text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (592 samples, 6.91%)</title><rect x="85.4826%" y="341" width="6.9086%" height="15" fill="rgb(207,125,25)" fg:x="7325" fg:w="592"/><text x="85.7326%" y="351.50">calcGame...</text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (198 samples, 2.31%)</title><rect x="90.0805%" y="325" width="2.3107%" height="15" fill="rgb(210,195,18)" fg:x="7719" fg:w="198"/><text x="90.3305%" y="335.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (198 samples, 2.31%)</title><rect x="90.0805%" y="309" width="2.3107%" height="15" fill="rgb(249,80,12)" fg:x="7719" fg:w="198"/><text x="90.3305%" y="319.50">c..</text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (98 samples, 1.14%)</title><rect x="92.3912%" y="341" width="1.1437%" height="15" fill="rgb(221,65,9)" fg:x="7917" fg:w="98"/><text x="92.6412%" y="351.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (98 samples, 1.14%)</title><rect x="92.3912%" y="325" width="1.1437%" height="15" fill="rgb(235,49,36)" fg:x="7917" fg:w="98"/><text x="92.6412%" y="335.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (98 samples, 1.14%)</title><rect x="92.3912%" y="309" width="1.1437%" height="15" fill="rgb(225,32,20)" fg:x="7917" fg:w="98"/><text x="92.6412%" y="319.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (98 samples, 1.14%)</title><rect x="92.3912%" y="293" width="1.1437%" height="15" fill="rgb(215,141,46)" fg:x="7917" fg:w="98"/><text x="92.6412%" y="303.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (7,847 samples, 91.57%)</title><rect x="3.3960%" y="373" width="91.5743%" height="15" fill="rgb(250,160,47)" fg:x="291" fg:w="7847"/><text x="3.6460%" y="383.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (7,839 samples, 91.48%)</title><rect x="3.4893%" y="357" width="91.4809%" height="15" fill="rgb(216,222,40)" fg:x="299" fg:w="7839"/><text x="3.7393%" y="367.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (123 samples, 1.44%)</title><rect x="93.5348%" y="341" width="1.4354%" height="15" fill="rgb(234,217,39)" fg:x="8015" fg:w="123"/><text x="93.7848%" y="351.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (74 samples, 0.86%)</title><rect x="94.9702%" y="373" width="0.8636%" height="15" fill="rgb(207,178,40)" fg:x="8138" fg:w="74"/><text x="95.2202%" y="383.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (46 samples, 0.54%)</title><rect x="95.2970%" y="357" width="0.5368%" height="15" fill="rgb(221,136,13)" fg:x="8166" fg:w="46"/><text x="95.5470%" y="367.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (48 samples, 0.56%)</title><rect x="95.9505%" y="357" width="0.5602%" height="15" fill="rgb(249,199,10)" fg:x="8222" fg:w="48"/><text x="96.2005%" y="367.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (48 samples, 0.56%)</title><rect x="95.9505%" y="341" width="0.5602%" height="15" fill="rgb(249,222,13)" fg:x="8222" fg:w="48"/><text x="96.2005%" y="351.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (73 samples, 0.85%)</title><rect x="96.5107%" y="357" width="0.8519%" height="15" fill="rgb(244,185,38)" fg:x="8270" fg:w="73"/><text x="96.7607%" y="367.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (73 samples, 0.85%)</title><rect x="96.5107%" y="341" width="0.8519%" height="15" fill="rgb(236,202,9)" fg:x="8270" fg:w="73"/><text x="96.7607%" y="351.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (192 samples, 2.24%)</title><rect x="95.8338%" y="373" width="2.2406%" height="15" fill="rgb(250,229,37)" fg:x="8212" fg:w="192"/><text x="96.0838%" y="383.50">c..</text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (61 samples, 0.71%)</title><rect x="97.3626%" y="357" width="0.7119%" height="15" fill="rgb(206,174,23)" fg:x="8343" fg:w="61"/><text x="97.6126%" y="367.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (61 samples, 0.71%)</title><rect x="97.3626%" y="341" width="0.7119%" height="15" fill="rgb(211,33,43)" fg:x="8343" fg:w="61"/><text x="97.6126%" y="351.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (31 samples, 0.36%)</title><rect x="98.0745%" y="373" width="0.3618%" height="15" fill="rgb(245,58,50)" fg:x="8404" fg:w="31"/><text x="98.3245%" y="383.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (31 samples, 0.36%)</title><rect x="98.0745%" y="357" width="0.3618%" height="15" fill="rgb(244,68,36)" fg:x="8404" fg:w="31"/><text x="98.3245%" y="367.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (31 samples, 0.36%)</title><rect x="98.0745%" y="341" width="0.3618%" height="15" fill="rgb(232,229,15)" fg:x="8404" fg:w="31"/><text x="98.3245%" y="351.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (31 samples, 0.36%)</title><rect x="98.0745%" y="325" width="0.3618%" height="15" fill="rgb(254,30,23)" fg:x="8404" fg:w="31"/><text x="98.3245%" y="335.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,355 samples, 97.50%)</title><rect x="1.1203%" y="405" width="97.5026%" height="15" fill="rgb(235,160,14)" fg:x="96" fg:w="8355"/><text x="1.3703%" y="415.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,353 samples, 97.48%)</title><rect x="1.1437%" y="389" width="97.4793%" height="15" fill="rgb(212,155,44)" fg:x="98" fg:w="8353"/><text x="1.3937%" y="399.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (16 samples, 0.19%)</title><rect x="98.4362%" y="373" width="0.1867%" height="15" fill="rgb(226,2,50)" fg:x="8435" fg:w="16"/><text x="98.6862%" y="383.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (24 samples, 0.28%)</title><rect x="98.6229%" y="405" width="0.2801%" height="15" fill="rgb(234,177,6)" fg:x="8451" fg:w="24"/><text x="98.8729%" y="415.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (16 samples, 0.19%)</title><rect x="98.7163%" y="389" width="0.1867%" height="15" fill="rgb(217,24,9)" fg:x="8459" fg:w="16"/><text x="98.9663%" y="399.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (9 samples, 0.11%)</title><rect x="98.9147%" y="389" width="0.1050%" height="15" fill="rgb(220,13,46)" fg:x="8476" fg:w="9"/><text x="99.1647%" y="399.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (9 samples, 0.11%)</title><rect x="98.9147%" y="373" width="0.1050%" height="15" fill="rgb(239,221,27)" fg:x="8476" fg:w="9"/><text x="99.1647%" y="383.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (13 samples, 0.15%)</title><rect x="99.0197%" y="389" width="0.1517%" height="15" fill="rgb(222,198,25)" fg:x="8485" fg:w="13"/><text x="99.2697%" y="399.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (13 samples, 0.15%)</title><rect x="99.0197%" y="373" width="0.1517%" height="15" fill="rgb(211,99,13)" fg:x="8485" fg:w="13"/><text x="99.2697%" y="383.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (38 samples, 0.44%)</title><rect x="98.9030%" y="405" width="0.4435%" height="15" fill="rgb(232,111,31)" fg:x="8475" fg:w="38"/><text x="99.1530%" y="415.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (15 samples, 0.18%)</title><rect x="99.1714%" y="389" width="0.1750%" height="15" fill="rgb(245,82,37)" fg:x="8498" fg:w="15"/><text x="99.4214%" y="399.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (15 samples, 0.18%)</title><rect x="99.1714%" y="373" width="0.1750%" height="15" fill="rgb(227,149,46)" fg:x="8498" fg:w="15"/><text x="99.4214%" y="383.50"></text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="99.3465%" y="405" width="0.0934%" height="15" fill="rgb(218,36,50)" fg:x="8513" fg:w="8"/><text x="99.5965%" y="415.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="99.3465%" y="389" width="0.0934%" height="15" fill="rgb(226,80,48)" fg:x="8513" fg:w="8"/><text x="99.5965%" y="399.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (8 samples, 0.09%)</title><rect x="99.3465%" y="373" width="0.0934%" height="15" fill="rgb(238,224,15)" fg:x="8513" fg:w="8"/><text x="99.5965%" y="383.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (8 samples, 0.09%)</title><rect x="99.3465%" y="357" width="0.0934%" height="15" fill="rgb(241,136,10)" fg:x="8513" fg:w="8"/><text x="99.5965%" y="367.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,478 samples, 98.94%)</title><rect x="0.5485%" y="437" width="98.9380%" height="15" fill="rgb(208,32,45)" fg:x="47" fg:w="8478"/><text x="0.7985%" y="447.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,473 samples, 98.88%)</title><rect x="0.6068%" y="421" width="98.8797%" height="15" fill="rgb(207,135,9)" fg:x="52" fg:w="8473"/><text x="0.8568%" y="431.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter&lt;enum2$ (4 samples, 0.05%)</title><rect x="99.4398%" y="405" width="0.0467%" height="15" fill="rgb(206,86,44)" fg:x="8521" fg:w="4"/><text x="99.6898%" y="415.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (2 samples, 0.02%)</title><rect x="99.4865%" y="437" width="0.0233%" height="15" fill="rgb(245,177,15)" fg:x="8525" fg:w="2"/><text x="99.7365%" y="447.50"></text></g><g><title>calcGame.exe`core::ptr::write(enum2$&lt;calcGame::Node&gt;*, enum2$ (1 samples, 0.01%)</title><rect x="99.4982%" y="421" width="0.0117%" height="15" fill="rgb(206,64,50)" fg:x="8526" fg:w="1"/><text x="99.7482%" y="431.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$175::mul (4 samples, 0.05%)</title><rect x="99.5215%" y="421" width="0.0467%" height="15" fill="rgb(234,36,40)" fg:x="8528" fg:w="4"/><text x="99.7715%" y="431.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$138::mul (4 samples, 0.05%)</title><rect x="99.5215%" y="405" width="0.0467%" height="15" fill="rgb(213,64,8)" fg:x="8528" fg:w="4"/><text x="99.7715%" y="415.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$235::div (1 samples, 0.01%)</title><rect x="99.5682%" y="421" width="0.0117%" height="15" fill="rgb(210,75,36)" fg:x="8532" fg:w="1"/><text x="99.8182%" y="431.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$202::div (1 samples, 0.01%)</title><rect x="99.5682%" y="405" width="0.0117%" height="15" fill="rgb(229,88,21)" fg:x="8532" fg:w="1"/><text x="99.8182%" y="415.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (9 samples, 0.11%)</title><rect x="99.5099%" y="437" width="0.1050%" height="15" fill="rgb(252,204,47)" fg:x="8527" fg:w="9"/><text x="99.7599%" y="447.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (3 samples, 0.04%)</title><rect x="99.5799%" y="421" width="0.0350%" height="15" fill="rgb(208,77,27)" fg:x="8533" fg:w="3"/><text x="99.8299%" y="431.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (3 samples, 0.04%)</title><rect x="99.5799%" y="405" width="0.0350%" height="15" fill="rgb(221,76,26)" fg:x="8533" fg:w="3"/><text x="99.8299%" y="415.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,504 samples, 99.24%)</title><rect x="0.3851%" y="469" width="99.2415%" height="15" fill="rgb(225,139,18)" fg:x="33" fg:w="8504"/><text x="0.6351%" y="479.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,504 samples, 99.24%)</title><rect x="0.3851%" y="453" width="99.2415%" height="15" fill="rgb(230,137,11)" fg:x="33" fg:w="8504"/><text x="0.6351%" y="463.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="99.6149%" y="437" width="0.0117%" height="15" fill="rgb(212,28,1)" fg:x="8536" fg:w="1"/><text x="99.8649%" y="447.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="99.6149%" y="421" width="0.0117%" height="15" fill="rgb(248,164,17)" fg:x="8536" fg:w="1"/><text x="99.8649%" y="431.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="99.6149%" y="405" width="0.0117%" height="15" fill="rgb(222,171,42)" fg:x="8536" fg:w="1"/><text x="99.8649%" y="415.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (1 samples, 0.01%)</title><rect x="99.6149%" y="389" width="0.0117%" height="15" fill="rgb(243,84,45)" fg:x="8536" fg:w="1"/><text x="99.8649%" y="399.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::push(enum2$ (1 samples, 0.01%)</title><rect x="99.6266%" y="469" width="0.0117%" height="15" fill="rgb(252,49,23)" fg:x="8537" fg:w="1"/><text x="99.8766%" y="479.50"></text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (2 samples, 0.02%)</title><rect x="99.6382%" y="469" width="0.0233%" height="15" fill="rgb(215,19,7)" fg:x="8538" fg:w="2"/><text x="99.8882%" y="479.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (2 samples, 0.02%)</title><rect x="99.6382%" y="453" width="0.0233%" height="15" fill="rgb(238,81,41)" fg:x="8538" fg:w="2"/><text x="99.8882%" y="463.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (2 samples, 0.02%)</title><rect x="99.6382%" y="437" width="0.0233%" height="15" fill="rgb(210,199,37)" fg:x="8538" fg:w="2"/><text x="99.8882%" y="447.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,516 samples, 99.38%)</title><rect x="0.3151%" y="533" width="99.3815%" height="15" fill="rgb(244,192,49)" fg:x="27" fg:w="8516"/><text x="0.5651%" y="543.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,516 samples, 99.38%)</title><rect x="0.3151%" y="517" width="99.3815%" height="15" fill="rgb(226,211,11)" fg:x="27" fg:w="8516"/><text x="0.5651%" y="527.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,514 samples, 99.36%)</title><rect x="0.3384%" y="501" width="99.3582%" height="15" fill="rgb(236,162,54)" fg:x="29" fg:w="8514"/><text x="0.5884%" y="511.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,514 samples, 99.36%)</title><rect x="0.3384%" y="485" width="99.3582%" height="15" fill="rgb(220,229,9)" fg:x="29" fg:w="8514"/><text x="0.5884%" y="495.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::slice::iter::impl$0::into_iter(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="99.6616%" y="469" width="0.0350%" height="15" fill="rgb(250,87,22)" fg:x="8540" fg:w="3"/><text x="99.9116%" y="479.50"></text></g><g><title>calcGame.exe`core::slice::impl$0::iter(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="99.6616%" y="453" width="0.0350%" height="15" fill="rgb(239,43,17)" fg:x="8540" fg:w="3"/><text x="99.9116%" y="463.50"></text></g><g><title>calcGame.exe`core::slice::iter::Iter&lt;enum2$&lt;calcGame::Node&gt; &gt;::new(ref$&lt;slice2$&lt;enum2$ (3 samples, 0.04%)</title><rect x="99.6616%" y="437" width="0.0350%" height="15" fill="rgb(231,177,25)" fg:x="8540" fg:w="3"/><text x="99.9116%" y="447.50"></text></g><g><title>calcGame.exe`core::ptr::mut_ptr::impl$0::add(enum2$ (3 samples, 0.04%)</title><rect x="99.6616%" y="421" width="0.0350%" height="15" fill="rgb(219,179,1)" fg:x="8540" fg:w="3"/><text x="99.9116%" y="431.50"></text></g><g><title>calcGame.exe`calcGame::calculate(ref$&lt;slice2$&lt;enum2$ (8,518 samples, 99.40%)</title><rect x="0.3034%" y="773" width="99.4048%" height="15" fill="rgb(238,219,53)" fg:x="26" fg:w="8518"/><text x="0.5534%" y="783.50">calcGame.exe`calcGame::calculate(ref$&lt;slice2$&lt;enum2$</text></g><g><title>calcGame.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="757" width="99.3932%" height="15" fill="rgb(232,167,36)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="767.50">calcGame.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="741" width="99.3932%" height="15" fill="rgb(244,19,51)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="751.50">calcGame.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="725" width="99.3932%" height="15" fill="rgb(224,6,22)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="735.50">calcGame.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec&lt;enum2$</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="709" width="99.3932%" height="15" fill="rgb(224,145,5)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="719.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,517 samples, 99.39%)</title><rect x="0.3151%" y="693" width="99.3932%" height="15" fill="rgb(234,130,49)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="703.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="677" width="99.3932%" height="15" fill="rgb(254,6,2)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="687.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,517 samples, 99.39%)</title><rect x="0.3151%" y="661" width="99.3932%" height="15" fill="rgb(208,96,46)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="671.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="645" width="99.3932%" height="15" fill="rgb(239,3,39)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="655.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,517 samples, 99.39%)</title><rect x="0.3151%" y="629" width="99.3932%" height="15" fill="rgb(233,210,1)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="639.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="613" width="99.3932%" height="15" fill="rgb(244,137,37)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="623.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,517 samples, 99.39%)</title><rect x="0.3151%" y="597" width="99.3932%" height="15" fill="rgb(240,136,2)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="607.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="581" width="99.3932%" height="15" fill="rgb(239,18,37)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="591.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop (8,517 samples, 99.39%)</title><rect x="0.3151%" y="565" width="99.3932%" height="15" fill="rgb(218,185,22)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="575.50">calcGame.exe`alloc::vec::Vec&lt;enum2$&lt;calcGame::Node&gt;,alloc::alloc::Global&gt;::pop</text></g><g><title>calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$ (8,517 samples, 99.39%)</title><rect x="0.3151%" y="549" width="99.3932%" height="15" fill="rgb(225,218,4)" fg:x="27" fg:w="8517"/><text x="0.5651%" y="559.50">calcGame.exe`calcGame::calculate_recursive(ref$&lt;slice2$&lt;enum2$&lt;calcGame::Node&gt; &gt; &gt;, alloc::vec::Vec&lt;enum2$</text></g><g><title>calcGame.exe`calcGame::transform(enum2$ (1 samples, 0.01%)</title><rect x="99.6966%" y="533" width="0.0117%" height="15" fill="rgb(230,182,32)" fg:x="8543" fg:w="1"/><text x="99.9466%" y="543.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$47::add (1 samples, 0.01%)</title><rect x="99.6966%" y="517" width="0.0117%" height="15" fill="rgb(242,56,43)" fg:x="8543" fg:w="1"/><text x="99.9466%" y="527.50"></text></g><g><title>calcGame.exe`core::ops::arith::impl$10::add (1 samples, 0.01%)</title><rect x="99.6966%" y="501" width="0.0117%" height="15" fill="rgb(233,99,24)" fg:x="8543" fg:w="1"/><text x="99.9466%" y="511.50"></text></g><g><title>`0x7FFC07F1CC91 (8,543 samples, 99.70%)</title><rect x="0.0233%" y="997" width="99.6966%" height="15" fill="rgb(234,209,42)" fg:x="2" fg:w="8543"/><text x="0.2733%" y="1007.50">`0x7FFC07F1CC91</text></g><g><title>`0x7FFC07297344 (8,543 samples, 99.70%)</title><rect x="0.0233%" y="981" width="99.6966%" height="15" fill="rgb(227,7,12)" fg:x="2" fg:w="8543"/><text x="0.2733%" y="991.50">`0x7FFC07297344</text></g><g><title>calcGame.exe`__scrt_common_main_seh() (8,532 samples, 99.57%)</title><rect x="0.1517%" y="965" width="99.5682%" height="15" fill="rgb(245,203,43)" fg:x="13" fg:w="8532"/><text x="0.4017%" y="975.50">calcGame.exe`__scrt_common_main_seh()</text></g><g><title>calcGame.exe`invoke_main() (8,520 samples, 99.43%)</title><rect x="0.2917%" y="949" width="99.4282%" height="15" fill="rgb(238,205,33)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="959.50">calcGame.exe`invoke_main()</text></g><g><title>calcGame.exe`main (8,520 samples, 99.43%)</title><rect x="0.2917%" y="933" width="99.4282%" height="15" fill="rgb(231,56,7)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="943.50">calcGame.exe`main</text></g><g><title>calcGame.exe`std::rt::lang_start_internal (8,520 samples, 99.43%)</title><rect x="0.2917%" y="917" width="99.4282%" height="15" fill="rgb(244,186,29)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="927.50">calcGame.exe`std::rt::lang_start_internal</text></g><g><title>calcGame.exe`std::panic::catch_unwind (8,520 samples, 99.43%)</title><rect x="0.2917%" y="901" width="99.4282%" height="15" fill="rgb(234,111,31)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="911.50">calcGame.exe`std::panic::catch_unwind</text></g><g><title>calcGame.exe`std::panicking::try (8,520 samples, 99.43%)</title><rect x="0.2917%" y="885" width="99.4282%" height="15" fill="rgb(241,149,10)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="895.50">calcGame.exe`std::panicking::try</text></g><g><title>calcGame.exe`std::panicking::try::do_call (8,520 samples, 99.43%)</title><rect x="0.2917%" y="869" width="99.4282%" height="15" fill="rgb(249,206,44)" fg:x="25" fg:w="8520"/><text x="0.5417%" y="879.50">calcGame.exe`std::panicking::try::do_call</text></g><g><title>calcGame.exe`std::rt::lang_start_internal::closure$2 (8,519 samples, 99.42%)</title><rect x="0.3034%" y="853" width="99.4165%" height="15" fill="rgb(251,153,30)" fg:x="26" fg:w="8519"/><text x="0.5534%" y="863.50">calcGame.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>calcGame.exe`std::panic::catch_unwind (8,519 samples, 99.42%)</title><rect x="0.3034%" y="837" width="99.4165%" height="15" fill="rgb(239,152,38)" fg:x="26" fg:w="8519"/><text x="0.5534%" y="847.50">calcGame.exe`std::panic::catch_unwind</text></g><g><title>calcGame.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (8,519 samples, 99.42%)</title><rect x="0.3034%" y="821" width="99.4165%" height="15" fill="rgb(249,139,47)" fg:x="26" fg:w="8519"/><text x="0.5534%" y="831.50">calcGame.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>calcGame.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (8,519 samples, 99.42%)</title><rect x="0.3034%" y="805" width="99.4165%" height="15" fill="rgb(244,64,35)" fg:x="26" fg:w="8519"/><text x="0.5534%" y="815.50">calcGame.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>calcGame.exe`calcGame::main (8,519 samples, 99.42%)</title><rect x="0.3034%" y="789" width="99.4165%" height="15" fill="rgb(216,46,15)" fg:x="26" fg:w="8519"/><text x="0.5534%" y="799.50">calcGame.exe`calcGame::main</text></g><g><title>calcGame.exe`std::io::stdio::_print (1 samples, 0.01%)</title><rect x="99.7083%" y="773" width="0.0117%" height="15" fill="rgb(250,74,19)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="783.50"></text></g><g><title>calcGame.exe`std::io::stdio::print_to (1 samples, 0.01%)</title><rect x="99.7083%" y="757" width="0.0117%" height="15" fill="rgb(249,42,33)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="767.50"></text></g><g><title>calcGame.exe`std::io::stdio::stdout (1 samples, 0.01%)</title><rect x="99.7083%" y="741" width="0.0117%" height="15" fill="rgb(242,149,17)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="751.50"></text></g><g><title>calcGame.exe`std::sync::once_lock::OnceLock::get_or_init (1 samples, 0.01%)</title><rect x="99.7083%" y="725" width="0.0117%" height="15" fill="rgb(244,29,21)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="735.50"></text></g><g><title>calcGame.exe`std::sync::once_lock::OnceLock::get_or_try_init (1 samples, 0.01%)</title><rect x="99.7083%" y="709" width="0.0117%" height="15" fill="rgb(220,130,37)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="719.50"></text></g><g><title>calcGame.exe`std::sync::once_lock::OnceLock::initialize&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::io::stdio::stdout::closure_env$0&gt;,never$&gt; (1 samples, 0.01%)</title><rect x="99.7083%" y="693" width="0.0117%" height="15" fill="rgb(211,67,2)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="703.50"></text></g><g><title>calcGame.exe`std::sys::sync::once::queue::Once::call (1 samples, 0.01%)</title><rect x="99.7083%" y="677" width="0.0117%" height="15" fill="rgb(235,68,52)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="687.50"></text></g><g><title>calcGame.exe`core::cell::Cell::get (1 samples, 0.01%)</title><rect x="99.7083%" y="661" width="0.0117%" height="15" fill="rgb(246,142,3)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="671.50"></text></g><g><title>calcGame.exe`std::sync::once::impl$2::call_once_force::closure$0&lt;std::sync::once_lock::impl$0::initialize::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::sync::once_lock::impl$0::get_or_init::closure_env$0&lt;std::sync::reentrant_lock::ReentrantLock&lt;core::cell::RefCell&lt;std::io::buffered::linewriter::LineWriter&lt;std::io::stdio::StdoutRaw&gt; &gt; &gt;,std::io::stdio::stdout::closure_env$0&gt;,never$&gt; &gt; (1 samples, 0.01%)</title><rect x="99.7083%" y="645" width="0.0117%" height="15" fill="rgb(241,25,7)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="655.50"></text></g><g><title>calcGame.exe`std::sync::once_lock::impl$0::initialize::closure$0 (1 samples, 0.01%)</title><rect x="99.7083%" y="629" width="0.0117%" height="15" fill="rgb(242,119,39)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="639.50"></text></g><g><title>calcGame.exe`std::sync::once_lock::impl$0::get_or_init::closure$0 (1 samples, 0.01%)</title><rect x="99.7083%" y="613" width="0.0117%" height="15" fill="rgb(241,98,45)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="623.50"></text></g><g><title>calcGame.exe`std::io::stdio::stdout::closure$0 (1 samples, 0.01%)</title><rect x="99.7083%" y="597" width="0.0117%" height="15" fill="rgb(254,28,30)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="607.50"></text></g><g><title>calcGame.exe`std::io::buffered::linewriter::LineWriter::new (1 samples, 0.01%)</title><rect x="99.7083%" y="581" width="0.0117%" height="15" fill="rgb(241,142,54)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="591.50"></text></g><g><title>calcGame.exe`std::io::buffered::linewriter::LineWriter::with_capacity (1 samples, 0.01%)</title><rect x="99.7083%" y="565" width="0.0117%" height="15" fill="rgb(222,85,15)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="575.50"></text></g><g><title>calcGame.exe`std::io::buffered::bufwriter::BufWriter::with_capacity (1 samples, 0.01%)</title><rect x="99.7083%" y="549" width="0.0117%" height="15" fill="rgb(210,85,47)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="559.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec::with_capacity (1 samples, 0.01%)</title><rect x="99.7083%" y="533" width="0.0117%" height="15" fill="rgb(224,206,25)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="543.50"></text></g><g><title>calcGame.exe`alloc::vec::Vec::with_capacity_in (1 samples, 0.01%)</title><rect x="99.7083%" y="517" width="0.0117%" height="15" fill="rgb(243,201,19)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="527.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec::with_capacity_in (1 samples, 0.01%)</title><rect x="99.7083%" y="501" width="0.0117%" height="15" fill="rgb(236,59,4)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="511.50"></text></g><g><title>calcGame.exe`alloc::raw_vec::RawVec::try_allocate_in (1 samples, 0.01%)</title><rect x="99.7083%" y="485" width="0.0117%" height="15" fill="rgb(254,179,45)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="495.50"></text></g><g><title>`0x7FFC07EFB26E (1 samples, 0.01%)</title><rect x="99.7083%" y="469" width="0.0117%" height="15" fill="rgb(226,14,10)" fg:x="8544" fg:w="1"/><text x="99.9583%" y="479.50"></text></g><g><title>`0x7FFC07FA2202 (1 samples, 0.01%)</title><rect x="99.7199%" y="949" width="0.0117%" height="15" fill="rgb(244,27,41)" fg:x="8545" fg:w="1"/><text x="99.9699%" y="959.50"></text></g><g><title>`0x7FFC07FA19B5 (1 samples, 0.01%)</title><rect x="99.7199%" y="933" width="0.0117%" height="15" fill="rgb(235,35,32)" fg:x="8545" fg:w="1"/><text x="99.9699%" y="943.50"></text></g><g><title>`0x7FFC07FC2C8B (1 samples, 0.01%)</title><rect x="99.7199%" y="917" width="0.0117%" height="15" fill="rgb(218,68,31)" fg:x="8545" fg:w="1"/><text x="99.9699%" y="927.50"></text></g><g><title>`0x7FFC07FC438D (1 samples, 0.01%)</title><rect x="99.7199%" y="901" width="0.0117%" height="15" fill="rgb(207,120,37)" fg:x="8545" fg:w="1"/><text x="99.9699%" y="911.50"></text></g><g><title>`0x7FFC07F6D7A4 (1 samples, 0.01%)</title><rect x="99.7199%" y="885" width="0.0117%" height="15" fill="rgb(227,98,0)" fg:x="8545" fg:w="1"/><text x="99.9699%" y="895.50"></text></g><g><title>`0x7FFC07FA28F8 (1 samples, 0.01%)</title><rect x="99.7316%" y="949" width="0.0117%" height="15" fill="rgb(207,7,3)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="959.50"></text></g><g><title>`0x7FFC07F12EA0 (1 samples, 0.01%)</title><rect x="99.7316%" y="933" width="0.0117%" height="15" fill="rgb(206,98,19)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="943.50"></text></g><g><title>`0x7FFC07F130E5 (1 samples, 0.01%)</title><rect x="99.7316%" y="917" width="0.0117%" height="15" fill="rgb(217,5,26)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="927.50"></text></g><g><title>`0x7FFC07F12F43 (1 samples, 0.01%)</title><rect x="99.7316%" y="901" width="0.0117%" height="15" fill="rgb(235,190,38)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="911.50"></text></g><g><title>`0x7FFC07F138C0 (1 samples, 0.01%)</title><rect x="99.7316%" y="885" width="0.0117%" height="15" fill="rgb(247,86,24)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="895.50"></text></g><g><title>`0x7FFC07F4E42E (1 samples, 0.01%)</title><rect x="99.7316%" y="869" width="0.0117%" height="15" fill="rgb(205,101,16)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="879.50"></text></g><g><title>`0x7FFC07EDE02C (1 samples, 0.01%)</title><rect x="99.7316%" y="853" width="0.0117%" height="15" fill="rgb(246,168,33)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="863.50"></text></g><g><title>`0x7FFC07EE09A3 (1 samples, 0.01%)</title><rect x="99.7316%" y="837" width="0.0117%" height="15" fill="rgb(231,114,1)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="847.50"></text></g><g><title>`0x7FFC07EE22CD (1 samples, 0.01%)</title><rect x="99.7316%" y="821" width="0.0117%" height="15" fill="rgb(207,184,53)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="831.50"></text></g><g><title>`0x7FFC07EE2634 (1 samples, 0.01%)</title><rect x="99.7316%" y="805" width="0.0117%" height="15" fill="rgb(224,95,51)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="815.50"></text></g><g><title>`0x7FFC07EE388C (1 samples, 0.01%)</title><rect x="99.7316%" y="789" width="0.0117%" height="15" fill="rgb(212,188,45)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="799.50"></text></g><g><title>`0x7FFC07F32FF4 (1 samples, 0.01%)</title><rect x="99.7316%" y="773" width="0.0117%" height="15" fill="rgb(223,154,38)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="783.50"></text></g><g><title>`0x7FFC07F6EEF4 (1 samples, 0.01%)</title><rect x="99.7316%" y="757" width="0.0117%" height="15" fill="rgb(251,22,52)" fg:x="8546" fg:w="1"/><text x="99.9816%" y="767.50"></text></g><g><title>`0x7FFC07FA30AF (1 samples, 0.01%)</title><rect x="99.7433%" y="949" width="0.0117%" height="15" fill="rgb(229,209,22)" fg:x="8547" fg:w="1"/><text x="99.9933%" y="959.50"></text></g><g><title>`0x7FFC07F4EB43 (1 samples, 0.01%)</title><rect x="99.7433%" y="933" width="0.0117%" height="15" fill="rgb(234,138,34)" fg:x="8547" fg:w="1"/><text x="99.9933%" y="943.50"></text></g><g><title>`0x7FFC07F6DE64 (1 samples, 0.01%)</title><rect x="99.7433%" y="917" width="0.0117%" height="15" fill="rgb(212,95,11)" fg:x="8547" fg:w="1"/><text x="99.9933%" y="927.50"></text></g><g><title>`0x7FFC07FA3611 (1 samples, 0.01%)</title><rect x="99.7549%" y="949" width="0.0117%" height="15" fill="rgb(240,179,47)" fg:x="8548" fg:w="1"/><text x="100.0049%" y="959.50"></text></g><g><title>`0x7FFC07F6D724 (1 samples, 0.01%)</title><rect x="99.7549%" y="933" width="0.0117%" height="15" fill="rgb(240,163,11)" fg:x="8548" fg:w="1"/><text x="100.0049%" y="943.50"></text></g><g><title>`0x7FFC07EE79D2 (1 samples, 0.01%)</title><rect x="99.7666%" y="837" width="0.0117%" height="15" fill="rgb(236,37,12)" fg:x="8549" fg:w="1"/><text x="100.0166%" y="847.50"></text></g><g><title>`0x7FFC07EE5082 (1 samples, 0.01%)</title><rect x="99.7666%" y="821" width="0.0117%" height="15" fill="rgb(232,164,16)" fg:x="8549" fg:w="1"/><text x="100.0166%" y="831.50"></text></g><g><title>`0x7FFC07F6DF64 (1 samples, 0.01%)</title><rect x="99.7666%" y="805" width="0.0117%" height="15" fill="rgb(244,205,15)" fg:x="8549" fg:w="1"/><text x="100.0166%" y="815.50"></text></g><g><title>`0x7FFC07EE7B29 (1 samples, 0.01%)</title><rect x="99.7783%" y="837" width="0.0117%" height="15" fill="rgb(223,117,47)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="847.50"></text></g><g><title>`0x7FFC07EE88A8 (1 samples, 0.01%)</title><rect x="99.7783%" y="821" width="0.0117%" height="15" fill="rgb(244,107,35)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="831.50"></text></g><g><title>`0x7FFC07EE4479 (1 samples, 0.01%)</title><rect x="99.7783%" y="805" width="0.0117%" height="15" fill="rgb(205,140,8)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="815.50"></text></g><g><title>`0x7FFC07EE4C14 (1 samples, 0.01%)</title><rect x="99.7783%" y="789" width="0.0117%" height="15" fill="rgb(228,84,46)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="799.50"></text></g><g><title>`0x7FFC07EE79D2 (1 samples, 0.01%)</title><rect x="99.7783%" y="773" width="0.0117%" height="15" fill="rgb(254,188,9)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="783.50"></text></g><g><title>`0x7FFC07EE5030 (1 samples, 0.01%)</title><rect x="99.7783%" y="757" width="0.0117%" height="15" fill="rgb(206,112,54)" fg:x="8550" fg:w="1"/><text x="100.0283%" y="767.50"></text></g><g><title>`0x7FFC07F026D1 (1 samples, 0.01%)</title><rect x="99.7899%" y="821" width="0.0117%" height="15" fill="rgb(216,84,49)" fg:x="8551" fg:w="1"/><text x="100.0399%" y="831.50"></text></g><g><title>`0x7FFC07EEFB31 (4 samples, 0.05%)</title><rect x="99.7666%" y="901" width="0.0467%" height="15" fill="rgb(214,194,35)" fg:x="8549" fg:w="4"/><text x="100.0166%" y="911.50"></text></g><g><title>`0x7FFC07F3C2FD (4 samples, 0.05%)</title><rect x="99.7666%" y="885" width="0.0467%" height="15" fill="rgb(249,28,3)" fg:x="8549" fg:w="4"/><text x="100.0166%" y="895.50"></text></g><g><title>`0x7FFC07EE4479 (4 samples, 0.05%)</title><rect x="99.7666%" y="869" width="0.0467%" height="15" fill="rgb(222,56,52)" fg:x="8549" fg:w="4"/><text x="100.0166%" y="879.50"></text></g><g><title>`0x7FFC07EE4C14 (4 samples, 0.05%)</title><rect x="99.7666%" y="853" width="0.0467%" height="15" fill="rgb(245,217,50)" fg:x="8549" fg:w="4"/><text x="100.0166%" y="863.50"></text></g><g><title>`0x7FFC07EE7BC4 (2 samples, 0.02%)</title><rect x="99.7899%" y="837" width="0.0233%" height="15" fill="rgb(213,201,24)" fg:x="8551" fg:w="2"/><text x="100.0399%" y="847.50"></text></g><g><title>`0x7FFC07F02736 (1 samples, 0.01%)</title><rect x="99.8016%" y="821" width="0.0117%" height="15" fill="rgb(248,116,28)" fg:x="8552" fg:w="1"/><text x="100.0516%" y="831.50"></text></g><g><title>`0x7FFC07EEFB5D (1 samples, 0.01%)</title><rect x="99.8133%" y="901" width="0.0117%" height="15" fill="rgb(219,72,43)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="911.50"></text></g><g><title>`0x7FFC07F30058 (1 samples, 0.01%)</title><rect x="99.8133%" y="885" width="0.0117%" height="15" fill="rgb(209,138,14)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="895.50"></text></g><g><title>`0x7FFC07F30138 (1 samples, 0.01%)</title><rect x="99.8133%" y="869" width="0.0117%" height="15" fill="rgb(222,18,33)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="879.50"></text></g><g><title>`0x7FFC07F0288A (1 samples, 0.01%)</title><rect x="99.8133%" y="853" width="0.0117%" height="15" fill="rgb(213,199,7)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="863.50"></text></g><g><title>`0x7FFC07F24549 (1 samples, 0.01%)</title><rect x="99.8133%" y="837" width="0.0117%" height="15" fill="rgb(250,110,10)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="847.50"></text></g><g><title>`0x7FFC07F24812 (1 samples, 0.01%)</title><rect x="99.8133%" y="821" width="0.0117%" height="15" fill="rgb(248,123,6)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="831.50"></text></g><g><title>`0x7FFC07EFB44D (1 samples, 0.01%)</title><rect x="99.8133%" y="805" width="0.0117%" height="15" fill="rgb(206,91,31)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="815.50"></text></g><g><title>`0x7FFC07EFD163 (1 samples, 0.01%)</title><rect x="99.8133%" y="789" width="0.0117%" height="15" fill="rgb(211,154,13)" fg:x="8553" fg:w="1"/><text x="100.0633%" y="799.50"></text></g><g><title>`0x7FFC058D27AD (1 samples, 0.01%)</title><rect x="99.8250%" y="805" width="0.0117%" height="15" fill="rgb(225,148,7)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="815.50"></text></g><g><title>`0x7FFC058D2D42 (1 samples, 0.01%)</title><rect x="99.8250%" y="789" width="0.0117%" height="15" fill="rgb(220,160,43)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="799.50"></text></g><g><title>`0x7FFC058D3C2C (1 samples, 0.01%)</title><rect x="99.8250%" y="773" width="0.0117%" height="15" fill="rgb(213,52,39)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="783.50"></text></g><g><title>`0x7FFC058D3CB1 (1 samples, 0.01%)</title><rect x="99.8250%" y="757" width="0.0117%" height="15" fill="rgb(243,137,7)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="767.50"></text></g><g><title>`0x7FFC058D4077 (1 samples, 0.01%)</title><rect x="99.8250%" y="741" width="0.0117%" height="15" fill="rgb(230,79,13)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="751.50"></text></g><g><title>`0x7FFC07F4D23E (1 samples, 0.01%)</title><rect x="99.8250%" y="725" width="0.0117%" height="15" fill="rgb(247,105,23)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="735.50"></text></g><g><title>`0x7FFC07F6F554 (1 samples, 0.01%)</title><rect x="99.8250%" y="709" width="0.0117%" height="15" fill="rgb(223,179,41)" fg:x="8554" fg:w="1"/><text x="100.0750%" y="719.50"></text></g><g><title>`0x7FFC058D27D7 (1 samples, 0.01%)</title><rect x="99.8366%" y="805" width="0.0117%" height="15" fill="rgb(218,9,34)" fg:x="8555" fg:w="1"/><text x="100.0866%" y="815.50"></text></g><g><title>`0x7FFC0591D6B2 (1 samples, 0.01%)</title><rect x="99.8366%" y="789" width="0.0117%" height="15" fill="rgb(222,106,8)" fg:x="8555" fg:w="1"/><text x="100.0866%" y="799.50"></text></g><g><title>`0x7FFC059346C0 (1 samples, 0.01%)</title><rect x="99.8366%" y="773" width="0.0117%" height="15" fill="rgb(211,220,0)" fg:x="8555" fg:w="1"/><text x="100.0866%" y="783.50"></text></g><g><title>`0x7FFC07FA384E (8 samples, 0.09%)</title><rect x="99.7666%" y="949" width="0.0934%" height="15" fill="rgb(229,52,16)" fg:x="8549" fg:w="8"/><text x="100.0166%" y="959.50"></text></g><g><title>`0x7FFC07EE6AF4 (8 samples, 0.09%)</title><rect x="99.7666%" y="933" width="0.0934%" height="15" fill="rgb(212,155,18)" fg:x="8549" fg:w="8"/><text x="100.0166%" y="943.50"></text></g><g><title>`0x7FFC07EE73E4 (8 samples, 0.09%)</title><rect x="99.7666%" y="917" width="0.0934%" height="15" fill="rgb(242,21,14)" fg:x="8549" fg:w="8"/><text x="100.0166%" y="927.50"></text></g><g><title>`0x7FFC07EEFBAE (3 samples, 0.04%)</title><rect x="99.8250%" y="901" width="0.0350%" height="15" fill="rgb(222,19,48)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="911.50"></text></g><g><title>`0x7FFC07F0D947 (3 samples, 0.04%)</title><rect x="99.8250%" y="885" width="0.0350%" height="15" fill="rgb(232,45,27)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="895.50"></text></g><g><title>`0x7FFC07F3D120 (3 samples, 0.04%)</title><rect x="99.8250%" y="869" width="0.0350%" height="15" fill="rgb(249,103,42)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="879.50"></text></g><g><title>`0x7FFC07F3D09A (3 samples, 0.04%)</title><rect x="99.8250%" y="853" width="0.0350%" height="15" fill="rgb(246,81,33)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="863.50"></text></g><g><title>`0x7FFC07F3D307 (3 samples, 0.04%)</title><rect x="99.8250%" y="837" width="0.0350%" height="15" fill="rgb(252,33,42)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="847.50"></text></g><g><title>`0x7FFC07EE9A1D (3 samples, 0.04%)</title><rect x="99.8250%" y="821" width="0.0350%" height="15" fill="rgb(209,212,41)" fg:x="8554" fg:w="3"/><text x="100.0750%" y="831.50"></text></g><g><title>`0x7FFC058D27DE (1 samples, 0.01%)</title><rect x="99.8483%" y="805" width="0.0117%" height="15" fill="rgb(207,154,6)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="815.50"></text></g><g><title>`0x7FFC0591DEA7 (1 samples, 0.01%)</title><rect x="99.8483%" y="789" width="0.0117%" height="15" fill="rgb(223,64,47)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="799.50"></text></g><g><title>`0x7FFC05933DE3 (1 samples, 0.01%)</title><rect x="99.8483%" y="773" width="0.0117%" height="15" fill="rgb(211,161,38)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="783.50"></text></g><g><title>`0x7FFC0591F53C (1 samples, 0.01%)</title><rect x="99.8483%" y="757" width="0.0117%" height="15" fill="rgb(219,138,40)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="767.50"></text></g><g><title>`0x7FFC0592B3D2 (1 samples, 0.01%)</title><rect x="99.8483%" y="741" width="0.0117%" height="15" fill="rgb(241,228,46)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="751.50"></text></g><g><title>`0x7FFC0592B5F8 (1 samples, 0.01%)</title><rect x="99.8483%" y="725" width="0.0117%" height="15" fill="rgb(223,209,38)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="735.50"></text></g><g><title>`0x7FFC058F0387 (1 samples, 0.01%)</title><rect x="99.8483%" y="709" width="0.0117%" height="15" fill="rgb(236,164,45)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="719.50"></text></g><g><title>`0x7FFC07F1A496 (1 samples, 0.01%)</title><rect x="99.8483%" y="693" width="0.0117%" height="15" fill="rgb(231,15,5)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="703.50"></text></g><g><title>`0x7FFC07F6D7A4 (1 samples, 0.01%)</title><rect x="99.8483%" y="677" width="0.0117%" height="15" fill="rgb(252,35,15)" fg:x="8556" fg:w="1"/><text x="100.0983%" y="687.50"></text></g><g><title>`0x7FFC07FA388F (1 samples, 0.01%)</title><rect x="99.8600%" y="949" width="0.0117%" height="15" fill="rgb(248,181,18)" fg:x="8557" fg:w="1"/><text x="100.1100%" y="959.50"></text></g><g><title>`0x7FFC07F000A5 (1 samples, 0.01%)</title><rect x="99.8600%" y="933" width="0.0117%" height="15" fill="rgb(233,39,42)" fg:x="8557" fg:w="1"/><text x="100.1100%" y="943.50"></text></g><g><title>`0x7FFC07F004A8 (1 samples, 0.01%)</title><rect x="99.8600%" y="917" width="0.0117%" height="15" fill="rgb(238,110,33)" fg:x="8557" fg:w="1"/><text x="100.1100%" y="927.50"></text></g><g><title>`0x7FFC07F022A9 (1 samples, 0.01%)</title><rect x="99.8600%" y="901" width="0.0117%" height="15" fill="rgb(233,195,10)" fg:x="8557" fg:w="1"/><text x="100.1100%" y="911.50"></text></g><g><title>`0x7FFC07FA391D (1 samples, 0.01%)</title><rect x="99.8716%" y="949" width="0.0117%" height="15" fill="rgb(254,105,3)" fg:x="8558" fg:w="1"/><text x="100.1216%" y="959.50"></text></g><g><title>`0x7FFC07EE70A6 (1 samples, 0.01%)</title><rect x="99.8716%" y="933" width="0.0117%" height="15" fill="rgb(221,225,9)" fg:x="8558" fg:w="1"/><text x="100.1216%" y="943.50"></text></g><g><title>`0x7FFC07EE01FD (1 samples, 0.01%)</title><rect x="99.8716%" y="917" width="0.0117%" height="15" fill="rgb(224,227,45)" fg:x="8558" fg:w="1"/><text x="100.1216%" y="927.50"></text></g><g><title>`0x7FFC07EE0446 (1 samples, 0.01%)</title><rect x="99.8716%" y="901" width="0.0117%" height="15" fill="rgb(229,198,43)" fg:x="8558" fg:w="1"/><text x="100.1216%" y="911.50"></text></g><g><title>`0x7FFC07F01CEB (1 samples, 0.01%)</title><rect x="99.8716%" y="885" width="0.0117%" height="15" fill="rgb(206,209,35)" fg:x="8558" fg:w="1"/><text x="100.1216%" y="895.50"></text></g><g><title>`0x7FFC07FA3AAD (1 samples, 0.01%)</title><rect x="99.8833%" y="949" width="0.0117%" height="15" fill="rgb(245,195,53)" fg:x="8559" fg:w="1"/><text x="100.1333%" y="959.50"></text></g><g><title>`0x7FFC0595201B (1 samples, 0.01%)</title><rect x="99.8833%" y="933" width="0.0117%" height="15" fill="rgb(240,92,26)" fg:x="8559" fg:w="1"/><text x="100.1333%" y="943.50"></text></g><g><title>`0x7FFC059ABD6B (1 samples, 0.01%)</title><rect x="99.8833%" y="917" width="0.0117%" height="15" fill="rgb(207,40,23)" fg:x="8559" fg:w="1"/><text x="100.1333%" y="927.50"></text></g><g><title>`0x7FFC07F6D7A4 (1 samples, 0.01%)</title><rect x="99.8833%" y="901" width="0.0117%" height="15" fill="rgb(223,111,35)" fg:x="8559" fg:w="1"/><text x="100.1333%" y="911.50"></text></g><g><title>`0x7FFC07EE79D2 (1 samples, 0.01%)</title><rect x="99.8950%" y="933" width="0.0117%" height="15" fill="rgb(229,147,28)" fg:x="8560" fg:w="1"/><text x="100.1450%" y="943.50"></text></g><g><title>`0x7FFC07EE5093 (1 samples, 0.01%)</title><rect x="99.8950%" y="917" width="0.0117%" height="15" fill="rgb(211,29,28)" fg:x="8560" fg:w="1"/><text x="100.1450%" y="927.50"></text></g><g><title>`0x7FFC07EE4AAA (1 samples, 0.01%)</title><rect x="99.9066%" y="885" width="0.0117%" height="15" fill="rgb(228,72,33)" fg:x="8561" fg:w="1"/><text x="100.1566%" y="895.50"></text></g><g><title>`0x7FFC07EE4D42 (1 samples, 0.01%)</title><rect x="99.9066%" y="869" width="0.0117%" height="15" fill="rgb(205,214,31)" fg:x="8561" fg:w="1"/><text x="100.1566%" y="879.50"></text></g><g><title>`0x7FFC07F6DA64 (1 samples, 0.01%)</title><rect x="99.9066%" y="853" width="0.0117%" height="15" fill="rgb(224,111,15)" fg:x="8561" fg:w="1"/><text x="100.1566%" y="863.50"></text></g><g><title>`0x7FFC07FA3BED (3 samples, 0.04%)</title><rect x="99.8950%" y="949" width="0.0350%" height="15" fill="rgb(253,21,26)" fg:x="8560" fg:w="3"/><text x="100.1450%" y="959.50"></text></g><g><title>`0x7FFC07EE7B29 (2 samples, 0.02%)</title><rect x="99.9066%" y="933" width="0.0233%" height="15" fill="rgb(245,139,43)" fg:x="8561" fg:w="2"/><text x="100.1566%" y="943.50"></text></g><g><title>`0x7FFC07EE88A8 (2 samples, 0.02%)</title><rect x="99.9066%" y="917" width="0.0233%" height="15" fill="rgb(252,170,7)" fg:x="8561" fg:w="2"/><text x="100.1566%" y="927.50"></text></g><g><title>`0x7FFC07EE4479 (2 samples, 0.02%)</title><rect x="99.9066%" y="901" width="0.0233%" height="15" fill="rgb(231,118,14)" fg:x="8561" fg:w="2"/><text x="100.1566%" y="911.50"></text></g><g><title>`0x7FFC07EE4C14 (1 samples, 0.01%)</title><rect x="99.9183%" y="885" width="0.0117%" height="15" fill="rgb(238,83,0)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="895.50"></text></g><g><title>`0x7FFC07EE7BA2 (1 samples, 0.01%)</title><rect x="99.9183%" y="869" width="0.0117%" height="15" fill="rgb(221,39,39)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="879.50"></text></g><g><title>`0x7FFC07EDF49F (1 samples, 0.01%)</title><rect x="99.9183%" y="853" width="0.0117%" height="15" fill="rgb(222,119,46)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="863.50"></text></g><g><title>`0x7FFC07EE2A66 (1 samples, 0.01%)</title><rect x="99.9183%" y="837" width="0.0117%" height="15" fill="rgb(222,165,49)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="847.50"></text></g><g><title>`0x7FFC07EE2BD9 (1 samples, 0.01%)</title><rect x="99.9183%" y="821" width="0.0117%" height="15" fill="rgb(219,113,52)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="831.50"></text></g><g><title>`0x7FFC07F70374 (1 samples, 0.01%)</title><rect x="99.9183%" y="805" width="0.0117%" height="15" fill="rgb(214,7,15)" fg:x="8562" fg:w="1"/><text x="100.1683%" y="815.50"></text></g><g><title>`0x7FFC07F30032 (1 samples, 0.01%)</title><rect x="99.9300%" y="933" width="0.0117%" height="15" fill="rgb(235,32,4)" fg:x="8563" fg:w="1"/><text x="100.1800%" y="943.50"></text></g><g><title>`0x7FFC07F6D5E4 (1 samples, 0.01%)</title><rect x="99.9300%" y="917" width="0.0117%" height="15" fill="rgb(238,90,54)" fg:x="8563" fg:w="1"/><text x="100.1800%" y="927.50"></text></g><g><title>`0x7FFC07FA3BF7 (2 samples, 0.02%)</title><rect x="99.9300%" y="949" width="0.0233%" height="15" fill="rgb(213,208,19)" fg:x="8563" fg:w="2"/><text x="100.1800%" y="959.50"></text></g><g><title>`0x7FFC07F30058 (1 samples, 0.01%)</title><rect x="99.9417%" y="933" width="0.0117%" height="15" fill="rgb(233,156,4)" fg:x="8564" fg:w="1"/><text x="100.1917%" y="943.50"></text></g><g><title>`0x7FFC07F30138 (1 samples, 0.01%)</title><rect x="99.9417%" y="917" width="0.0117%" height="15" fill="rgb(207,194,5)" fg:x="8564" fg:w="1"/><text x="100.1917%" y="927.50"></text></g><g><title>`0x7FFC07F026EC (1 samples, 0.01%)</title><rect x="99.9417%" y="901" width="0.0117%" height="15" fill="rgb(206,111,30)" fg:x="8564" fg:w="1"/><text x="100.1917%" y="911.50"></text></g><g><title>`0x7FFC05C97060 (1 samples, 0.01%)</title><rect x="99.9533%" y="821" width="0.0117%" height="15" fill="rgb(243,70,54)" fg:x="8565" fg:w="1"/><text x="100.2033%" y="831.50"></text></g><g><title>`0x7FFC07FA3D32 (2 samples, 0.02%)</title><rect x="99.9533%" y="949" width="0.0233%" height="15" fill="rgb(242,28,8)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="959.50"></text></g><g><title>`0x7FFC07F3D120 (2 samples, 0.02%)</title><rect x="99.9533%" y="933" width="0.0233%" height="15" fill="rgb(219,106,18)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="943.50"></text></g><g><title>`0x7FFC07F3D120 (2 samples, 0.02%)</title><rect x="99.9533%" y="917" width="0.0233%" height="15" fill="rgb(244,222,10)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="927.50"></text></g><g><title>`0x7FFC07F3D09A (2 samples, 0.02%)</title><rect x="99.9533%" y="901" width="0.0233%" height="15" fill="rgb(236,179,52)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="911.50"></text></g><g><title>`0x7FFC07F3D307 (2 samples, 0.02%)</title><rect x="99.9533%" y="885" width="0.0233%" height="15" fill="rgb(213,23,39)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="895.50"></text></g><g><title>`0x7FFC07EE9A1D (2 samples, 0.02%)</title><rect x="99.9533%" y="869" width="0.0233%" height="15" fill="rgb(238,48,10)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="879.50"></text></g><g><title>`0x7FFC05CA6216 (2 samples, 0.02%)</title><rect x="99.9533%" y="853" width="0.0233%" height="15" fill="rgb(251,196,23)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="863.50"></text></g><g><title>`0x7FFC05CA7730 (2 samples, 0.02%)</title><rect x="99.9533%" y="837" width="0.0233%" height="15" fill="rgb(250,152,24)" fg:x="8565" fg:w="2"/><text x="100.2033%" y="847.50"></text></g><g><title>`0x7FFC05CAF9C9 (1 samples, 0.01%)</title><rect x="99.9650%" y="821" width="0.0117%" height="15" fill="rgb(209,150,17)" fg:x="8566" fg:w="1"/><text x="100.2150%" y="831.50"></text></g><g><title>`0x7FFC05CAFA14 (1 samples, 0.01%)</title><rect x="99.9650%" y="805" width="0.0117%" height="15" fill="rgb(234,202,34)" fg:x="8566" fg:w="1"/><text x="100.2150%" y="815.50"></text></g><g><title>`0x7FFC05C9754A (1 samples, 0.01%)</title><rect x="99.9650%" y="789" width="0.0117%" height="15" fill="rgb(253,148,53)" fg:x="8566" fg:w="1"/><text x="100.2150%" y="799.50"></text></g><g><title>`0x7FFC05C958F7 (1 samples, 0.01%)</title><rect x="99.9650%" y="773" width="0.0117%" height="15" fill="rgb(218,129,16)" fg:x="8566" fg:w="1"/><text x="100.2150%" y="783.50"></text></g><g><title>`0x7FFC07F45C83 (23 samples, 0.27%)</title><rect x="99.7199%" y="981" width="0.2684%" height="15" fill="rgb(216,85,19)" fg:x="8545" fg:w="23"/><text x="99.9699%" y="991.50"></text></g><g><title>`0x7FFC07F45DFB (23 samples, 0.27%)</title><rect x="99.7199%" y="965" width="0.2684%" height="15" fill="rgb(235,228,7)" fg:x="8545" fg:w="23"/><text x="99.9699%" y="975.50"></text></g><g><title>`0x7FFC07FA3E3D (1 samples, 0.01%)</title><rect x="99.9767%" y="949" width="0.0117%" height="15" fill="rgb(245,175,0)" fg:x="8567" fg:w="1"/><text x="100.2267%" y="959.50"></text></g><g><title>`0x7FFC07EE9AFF (1 samples, 0.01%)</title><rect x="99.9767%" y="933" width="0.0117%" height="15" fill="rgb(208,168,36)" fg:x="8567" fg:w="1"/><text x="100.2267%" y="943.50"></text></g><g><title>`0x7FFC07EE9A1D (1 samples, 0.01%)</title><rect x="99.9767%" y="917" width="0.0117%" height="15" fill="rgb(246,171,24)" fg:x="8567" fg:w="1"/><text x="100.2267%" y="927.50"></text></g><g><title>calcGame.exe`std::sys::pal::windows::thread_local_key::on_tls_callback (1 samples, 0.01%)</title><rect x="99.9767%" y="901" width="0.0117%" height="15" fill="rgb(215,142,24)" fg:x="8567" fg:w="1"/><text x="100.2267%" y="911.50"></text></g><g><title>all (8,569 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(250,187,7)" fg:x="0" fg:w="8569"/><text x="0.2500%" y="1023.50"></text></g><g><title>`0x7FFC07F45C2E (24 samples, 0.28%)</title><rect x="99.7199%" y="997" width="0.2801%" height="15" fill="rgb(228,66,33)" fg:x="8545" fg:w="24"/><text x="99.9699%" y="1007.50"></text></g><g><title>`0x7FFC07F45C94 (1 samples, 0.01%)</title><rect x="99.9883%" y="981" width="0.0117%" height="15" fill="rgb(234,215,21)" fg:x="8568" fg:w="1"/><text x="100.2383%" y="991.50"></text></g><g><title>`0x7FFC07FA0481 (1 samples, 0.01%)</title><rect x="99.9883%" y="965" width="0.0117%" height="15" fill="rgb(222,191,20)" fg:x="8568" fg:w="1"/><text x="100.2383%" y="975.50"></text></g><g><title>`0x7FFC07EE06A3 (1 samples, 0.01%)</title><rect x="99.9883%" y="949" width="0.0117%" height="15" fill="rgb(245,79,54)" fg:x="8568" fg:w="1"/><text x="100.2383%" y="959.50"></text></g></svg></svg>